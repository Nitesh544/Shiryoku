{"version":3,"file":"static/js/321.ebb037dc.chunk.js","mappings":"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","sources":["components/Home/IssueCard.tsx","pages/Home/Issues.tsx","utils/axios.ts"],"sourcesContent":["/**\r\n * Issue Card Component\r\n */\r\n\r\n// Dependencies\r\nimport React, { FC, PropsWithChildren } from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport * as DateFns from 'date-fns';\r\n\r\nimport {\r\n\tGrid,\r\n\tPaper,\r\n\tTypography,\r\n\tChip,\r\n\tDivider,\r\n\tStack,\r\n\tTooltip,\r\n\tstyled,\r\n\tButton,\r\n} from '@mui/material';\r\nimport GitHubIcon from '@mui/icons-material/GitHub';\r\n\r\ninterface IssueCardProps extends PropsWithChildren, GitHubIssue {}\r\n\r\nconst IssueCard: FC<IssueCardProps> = ({\r\n\ttitle,\r\n\tbody,\r\n\tstate,\r\n\tupdatedAt,\r\n\tcreatedAt,\r\n\tlabels,\r\n\turl,\r\n}) => {\r\n\tconst handleNavigateToIssue = () => {\r\n\t\twindow.open(url, '_blank');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Grid item xs={12} md={4} m={2}>\r\n\t\t\t<Card>\r\n\t\t\t\t<Typography variant=\"h6\" lineHeight={1}>\r\n\t\t\t\t\t<GitHubIcon /> {title} <br />\r\n\t\t\t\t\t<Chip\r\n\t\t\t\t\t\tlabel={state}\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tcolor=\"success\"\r\n\t\t\t\t\t\tsx={{ transform: 'scale(0.8)' }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Divider />\r\n\t\t\t\t<Typography\r\n\t\t\t\t\tp={2}\r\n\t\t\t\t\tsx={{\r\n\t\t\t\t\t\twordBreak: 'break-word',\r\n\t\t\t\t\t\timg: {\r\n\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<ReactMarkdown>{body}</ReactMarkdown>\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<GitHubButton\r\n\t\t\t\t\tstartIcon={<GitHubIcon />}\r\n\t\t\t\t\tonClick={handleNavigateToIssue}\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t>\r\n\t\t\t\t\tView Issue in GitHub\r\n\t\t\t\t</GitHubButton>\r\n\t\t\t\t<Divider />\r\n\t\t\t\t{labels.length > 0 &&\r\n\t\t\t\t\tlabels.map((label) => (\r\n\t\t\t\t\t\t<Tooltip title={label.description}>\r\n\t\t\t\t\t\t\t<Chip\r\n\t\t\t\t\t\t\t\tlabel={label.name}\r\n\t\t\t\t\t\t\t\tsx={{\r\n\t\t\t\t\t\t\t\t\tcursor: 'pointer',\r\n\t\t\t\t\t\t\t\t\tbackgroundColor: `#${label.color}`,\r\n\t\t\t\t\t\t\t\t\tmargin: '0.5em 0.25em',\r\n\t\t\t\t\t\t\t\t\tcolor: '#FFFFFF',\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t))}\r\n\t\t\t\t<Divider />\r\n\t\t\t\t<Stack direction=\"column\" spacing={2} mt={1} fontSize={'0.75rem'}>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<b>Created At</b>: {DateFns.format(new Date(createdAt), 'PPP')}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<b>Updated At</b>: {DateFns.format(new Date(updatedAt), 'PPP')}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</Stack>\r\n\t\t\t</Card>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nexport default IssueCard;\r\n\r\nconst GitHubButton = styled(Button)({\r\n\twidth: '100%',\r\n\tmarginBottom: '1em',\r\n\t'&:hover': {},\r\n});\r\n\r\nconst Card = styled(Paper)({\r\n\tpadding: '1em 0.75em',\r\n\theight: '100%',\r\n});\r\n","/**\r\n * Issues Page\r\n */\r\n\r\n// Dependencies\r\nimport React, { useState, useEffect } from 'react';\r\nimport { fetchProjectIssuesList } from '../../utils/axios';\r\n\r\nimport {\r\n\tTypography,\r\n\tBox,\r\n\tstyled,\r\n\tDivider,\r\n\tGrid,\r\n\tContainer,\r\n} from '@mui/material';\r\n\r\nimport IssueCard from '../../components/Home/IssueCard';\r\n\r\nconst Issues = () => {\r\n\tconst [issues, setIssues] = useState<GitHubIssue[]>([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst handleFetchIssues = async () => {\r\n\t\t\tconst data = await fetchProjectIssuesList();\r\n\t\t\tsetIssues(data);\r\n\t\t};\r\n\t\thandleFetchIssues();\r\n\t}, []);\r\n\treturn (\r\n\t\t<Main>\r\n\t\t\t<Typography variant=\"h6\" noWrap>\r\n\t\t\t\tIssues{' '}\r\n\t\t\t\t<Typography variant=\"caption\" component=\"span\">\r\n\t\t\t\t\tto fix the Resources.\r\n\t\t\t\t</Typography>\r\n\t\t\t</Typography>\r\n\t\t\t<Divider />\r\n\t\t\t<Content>\r\n\t\t\t\t{issues.length > 0 ? (\r\n\t\t\t\t\t<CardsContainer container spacing={2} gap={2} justifyContent=\"center\">\r\n\t\t\t\t\t\t{issues.map((issue, index) => (\r\n\t\t\t\t\t\t\t<IssueCard {...issue} key={index} />\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</CardsContainer>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Typography>No issues available right now! ðŸ¥³ðŸ™Œ</Typography>\r\n\t\t\t\t)}\r\n\t\t\t</Content>\r\n\t\t</Main>\r\n\t);\r\n};\r\n\r\nconst Main = styled(Box)({});\r\n\r\nconst Content = styled(Container)({\r\n\tdisplay: 'flex',\r\n\talignItems: 'center',\r\n\tjustifyContent: 'space-around',\r\n});\r\n\r\nconst CardsContainer = styled(Grid)({\r\n\tmarginTop: '1em',\r\n\twidth: '100%',\r\n});\r\n\r\nexport default Issues;\r\n","/**\r\n * Axios setup\r\n */\r\n\r\nimport axios from 'axios';\r\nimport config from '../config';\r\n\r\ntype IFetchProjectContributors = () => Promise<ContributorProfile[]>;\r\n\r\ntype IFetchProjectIssuesList = () => Promise<GitHubIssue[]>;\r\n\r\nexport const fetchProjectContributorsList: IFetchProjectContributors =\r\n\tasync () => {\r\n\t\ttry {\r\n\t\t\tlet contributors: ContributorProfile[] = sessionStorage.getItem(\r\n\t\t\t\t'contributors'\r\n\t\t\t)\r\n\t\t\t\t? JSON.parse(sessionStorage.getItem('contributors') || '{}')\r\n\t\t\t\t: null;\r\n\t\t\tif (!contributors) {\r\n\t\t\t\tconst response = await axios.get(config.GITHUB_CONTRIBUTIONS_URL);\r\n\t\t\t\tcontributors = response.data.map((account: any) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tusername: account.login,\r\n\t\t\t\t\t\tavatar: account.avatar_url,\r\n\t\t\t\t\t\tprofile: account.html_url,\r\n\t\t\t\t\t\tcontributions: account.contributions,\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsessionStorage.setItem('contributors', JSON.stringify(contributors));\r\n\t\t\t}\r\n\t\t\treturn contributors;\r\n\t\t} catch (error) {\r\n\t\t\tsessionStorage.removeItem('contributors');\r\n\t\t\treturn [];\r\n\t\t}\r\n\t};\r\n\r\nexport const fetchProjectIssuesList: IFetchProjectIssuesList = async () => {\r\n\ttry {\r\n\t\tlet issues: GitHubIssue[] = sessionStorage.getItem('issues')\r\n\t\t\t? JSON.parse(sessionStorage.getItem('issues') || '{}')\r\n\t\t\t: null;\r\n\t\tif (!issues) {\r\n\t\t\tconst response = await axios.get(config.GITHUB_ISSUES_URL);\r\n\t\t\tissues = response.data.map((issue: any) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\turl: issue.html_url,\r\n\t\t\t\t\tstate: issue.state,\r\n\t\t\t\t\ttitle: issue.title,\r\n\t\t\t\t\tbody: issue.body,\r\n\t\t\t\t\tlabels: issue.labels,\r\n\t\t\t\t\tcreatedAt: issue.created_at,\r\n\t\t\t\t\tupdatedAt: issue.updated_at,\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\t\tsessionStorage.setItem('issues', JSON.stringify(issues));\r\n\t\t}\r\n\t\treturn issues;\r\n\t} catch (error) {\r\n\t\tsessionStorage.removeItem('issues');\r\n\t\treturn [];\r\n\t}\r\n};\r\n"],"names":["title","body","state","updatedAt","createdAt","labels","url","Grid","item","xs","md","m","Card","Typography","variant","lineHeight","GitHub","Chip","label","color","sx","transform","Divider","p","wordBreak","img","width","GitHubButton","startIcon","onClick","window","open","length","map","Tooltip","description","name","cursor","backgroundColor","margin","Stack","direction","spacing","mt","fontSize","DateFns","Date","styled","Button","marginBottom","Paper","padding","height","Main","Box","Content","Container","display","alignItems","justifyContent","CardsContainer","marginTop","useState","issues","setIssues","useEffect","handleFetchIssues","fetchProjectIssuesList","data","noWrap","component","container","gap","issue","index","key","fetchProjectContributorsList","contributors","sessionStorage","getItem","JSON","parse","axios","config","response","account","username","login","avatar","avatar_url","profile","html_url","contributions","setItem","stringify","removeItem","created_at","updated_at"],"sourceRoot":""}