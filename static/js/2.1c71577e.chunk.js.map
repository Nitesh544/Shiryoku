{"version":3,"file":"static/js/2.1c71577e.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/GitHub.js","../node_modules/date-fns/esm/_lib/requiredArgs/index.js","../node_modules/date-fns/esm/isDate/index.js","../node_modules/date-fns/esm/toDate/index.js","../node_modules/date-fns/esm/isValid/index.js","../node_modules/date-fns/esm/_lib/toInteger/index.js","../node_modules/date-fns/esm/addMilliseconds/index.js","../node_modules/date-fns/esm/subMilliseconds/index.js","../node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js","../node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js","../node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js","../node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js","../node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js","../node_modules/date-fns/esm/_lib/defaultOptions/index.js","../node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js","../node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js","../node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js","../node_modules/date-fns/esm/_lib/getUTCWeek/index.js","../node_modules/date-fns/esm/_lib/addLeadingZeros/index.js","../node_modules/date-fns/esm/_lib/format/lightFormatters/index.js","../node_modules/date-fns/esm/_lib/format/formatters/index.js","../node_modules/date-fns/esm/_lib/format/longFormatters/index.js","../node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js","../node_modules/date-fns/esm/_lib/protectedTokens/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js","../node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js","../node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js","../node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/match/index.js","../node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js","../node_modules/date-fns/esm/_lib/defaultLocale/index.js","../node_modules/date-fns/esm/locale/en-US/index.js","../node_modules/date-fns/esm/format/index.js","../node_modules/extend/index.js","../node_modules/inline-style-parser/index.js","../node_modules/is-buffer/index.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/style-to-object/index.js","../node_modules/@babel/runtime/helpers/esm/toArray.js","../node_modules/unist-util-stringify-position/index.js","../node_modules/vfile-message/index.js","../node_modules/vfile/lib/minpath.browser.js","../node_modules/vfile/lib/minproc.browser.js","../node_modules/vfile/lib/minurl.shared.js","../node_modules/vfile/lib/minurl.browser.js","../node_modules/vfile/lib/index.js","../node_modules/bail/index.js","../node_modules/is-plain-obj/index.js","../node_modules/trough/index.js","../node_modules/unified/lib/index.js","../node_modules/mdast-util-to-string/index.js","../node_modules/micromark-util-chunked/index.js","../node_modules/micromark-util-combine-extensions/index.js","../node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","../node_modules/micromark-util-character/index.js","../node_modules/micromark-factory-space/index.js","../node_modules/micromark/lib/initialize/content.js","../node_modules/micromark/lib/initialize/document.js","../node_modules/micromark-core-commonmark/lib/blank-line.js","../node_modules/micromark-util-subtokenize/index.js","../node_modules/micromark-core-commonmark/lib/content.js","../node_modules/micromark/lib/initialize/flow.js","../node_modules/micromark/lib/initialize/text.js","../node_modules/micromark-util-resolve-all/index.js","../node_modules/micromark/lib/create-tokenizer.js","../node_modules/micromark-core-commonmark/lib/thematic-break.js","../node_modules/micromark-core-commonmark/lib/list.js","../node_modules/micromark-core-commonmark/lib/block-quote.js","../node_modules/micromark-factory-destination/index.js","../node_modules/micromark-factory-label/index.js","../node_modules/micromark-factory-title/index.js","../node_modules/micromark-factory-whitespace/index.js","../node_modules/micromark-util-normalize-identifier/index.js","../node_modules/micromark-core-commonmark/lib/definition.js","../node_modules/micromark-core-commonmark/lib/code-indented.js","../node_modules/micromark-core-commonmark/lib/heading-atx.js","../node_modules/micromark-core-commonmark/lib/setext-underline.js","../node_modules/micromark-util-html-tag-name/index.js","../node_modules/micromark-core-commonmark/lib/html-flow.js","../node_modules/micromark-core-commonmark/lib/code-fenced.js","../node_modules/decode-named-character-reference/index.dom.js","../node_modules/micromark-core-commonmark/lib/character-reference.js","../node_modules/micromark-core-commonmark/lib/character-escape.js","../node_modules/micromark-core-commonmark/lib/line-ending.js","../node_modules/micromark-core-commonmark/lib/label-end.js","../node_modules/micromark-core-commonmark/lib/label-start-image.js","../node_modules/micromark-util-classify-character/index.js","../node_modules/micromark-core-commonmark/lib/attention.js","../node_modules/micromark-core-commonmark/lib/autolink.js","../node_modules/micromark-core-commonmark/lib/html-text.js","../node_modules/micromark-core-commonmark/lib/label-start-link.js","../node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../node_modules/micromark-core-commonmark/lib/code-text.js","../node_modules/micromark/lib/constructs.js","../node_modules/micromark/lib/preprocess.js","../node_modules/micromark-util-decode-numeric-character-reference/index.js","../node_modules/micromark-util-decode-string/index.js","../node_modules/mdast-util-from-markdown/lib/index.js","../node_modules/micromark/lib/postprocess.js","../node_modules/micromark/lib/parse.js","../node_modules/remark-parse/index.js","../node_modules/remark-parse/lib/index.js","../node_modules/unist-builder/index.js","../node_modules/unist-util-is/index.js","../node_modules/unist-util-visit-parents/index.js","../node_modules/unist-util-visit/index.js","../node_modules/unist-util-position/index.js","../node_modules/mdast-util-definitions/index.js","../node_modules/mdast-util-to-hast/lib/traverse.js","../node_modules/micromark-util-sanitize-uri/index.js","../node_modules/mdast-util-to-hast/lib/wrap.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../node_modules/mdast-util-to-hast/lib/revert.js","../node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../node_modules/trim-lines/index.js","../node_modules/mdast-util-to-hast/lib/handlers/index.js","../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../node_modules/mdast-util-to-hast/lib/handlers/break.js","../node_modules/mdast-util-to-hast/lib/handlers/code.js","../node_modules/mdast-util-to-hast/lib/handlers/delete.js","../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote.js","../node_modules/mdast-util-to-hast/lib/handlers/heading.js","../node_modules/mdast-util-to-hast/lib/handlers/html.js","../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/image.js","../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/link.js","../node_modules/mdast-util-to-hast/lib/handlers/list.js","../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../node_modules/mdast-util-to-hast/lib/handlers/root.js","../node_modules/mdast-util-to-hast/lib/handlers/strong.js","../node_modules/mdast-util-to-hast/lib/handlers/table.js","../node_modules/mdast-util-to-hast/lib/handlers/text.js","../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../node_modules/mdast-util-to-hast/lib/index.js","../node_modules/unist-util-generated/index.js","../node_modules/mdast-util-to-hast/lib/footer.js","../node_modules/remark-rehype/lib/index.js","../node_modules/property-information/lib/util/schema.js","../node_modules/property-information/lib/util/merge.js","../node_modules/property-information/lib/normalize.js","../node_modules/property-information/lib/util/info.js","../node_modules/property-information/lib/util/types.js","../node_modules/property-information/lib/util/defined-info.js","../node_modules/property-information/lib/util/create.js","../node_modules/property-information/lib/xlink.js","../node_modules/property-information/lib/xml.js","../node_modules/property-information/lib/util/case-sensitive-transform.js","../node_modules/property-information/lib/util/case-insensitive-transform.js","../node_modules/property-information/lib/xmlns.js","../node_modules/property-information/lib/aria.js","../node_modules/property-information/lib/html.js","../node_modules/property-information/lib/svg.js","../node_modules/property-information/index.js","../node_modules/react-markdown/lib/rehype-filter.js","../node_modules/react-markdown/lib/uri-transformer.js","../node_modules/hast-util-whitespace/index.js","../node_modules/property-information/lib/find.js","../node_modules/property-information/lib/hast-to-react.js","../node_modules/react-markdown/lib/ast-to-react.js","../node_modules/comma-separated-tokens/index.js","../node_modules/space-separated-tokens/index.js","../node_modules/react-markdown/lib/react-markdown.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 1.27a11 11 0 00-3.48 21.46c.55.09.73-.28.73-.55v-1.84c-3.03.64-3.67-1.46-3.67-1.46-.55-1.29-1.28-1.65-1.28-1.65-.92-.65.1-.65.1-.65 1.1 0 1.73 1.1 1.73 1.1.92 1.65 2.57 1.2 3.21.92a2 2 0 01.64-1.47c-2.47-.27-5.04-1.19-5.04-5.5 0-1.1.46-2.1 1.2-2.84a3.76 3.76 0 010-2.93s.91-.28 3.11 1.1c1.8-.49 3.7-.49 5.5 0 2.1-1.38 3.02-1.1 3.02-1.1a3.76 3.76 0 010 2.93c.83.74 1.2 1.74 1.2 2.94 0 4.21-2.57 5.13-5.04 5.4.45.37.82.92.82 2.02v3.03c0 .27.1.64.73.55A11 11 0 0012 1.27\"\n}), 'GitHub');\n\nexports.default = _default;","export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param {*} value - the value to check\n * @returns {boolean} true if the given value is a date\n * @throws {TypeError} 1 arguments required\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\n\nexport default function isDate(value) {\n  requiredArgs(1, arguments);\n  return value instanceof Date || _typeof(value) === 'object' && Object.prototype.toString.call(value) === '[object Date]';\n}","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\n\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || _typeof(argument) === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}","import isDate from \"../isDate/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param {*} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\n\nexport default function isValid(dirtyDate) {\n  requiredArgs(1, arguments);\n\n  if (!isDate(dirtyDate) && typeof dirtyDate !== 'number') {\n    return false;\n  }\n\n  var date = toDate(dirtyDate);\n  return !isNaN(Number(date));\n}","export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n\n  var number = Number(dirtyNumber);\n\n  if (isNaN(number)) {\n    return number;\n  }\n\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * const result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\n\nexport default function addMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var timestamp = toDate(dirtyDate).getTime();\n  var amount = toInteger(dirtyAmount);\n  return new Date(timestamp + amount);\n}","import addMilliseconds from \"../addMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name subMilliseconds\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * const result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\n\nexport default function subMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, -amount);\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_DAY = 86400000;\nexport default function getUTCDayOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n  var startOfYearTimestamp = date.getTime();\n  var difference = timestamp - startOfYearTimestamp;\n  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nexport default function startOfUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nexport default function getUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getUTCISOWeekYear from \"../getUTCISOWeekYear/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nexport default function startOfUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getUTCISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setUTCFullYear(year, 0, 4);\n  fourthOfJanuary.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCISOWeek(fourthOfJanuary);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport startOfUTCISOWeekYear from \"../startOfUTCISOWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000;\nexport default function getUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","var defaultOptions = {};\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport toInteger from \"../toInteger/index.js\";\nimport { getDefaultOptions } from \"../defaultOptions/index.js\";\nexport default function startOfUTCWeek(dirtyDate, options) {\n  var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;\n\n  requiredArgs(1, arguments);\n  var defaultOptions = getDefaultOptions();\n  var weekStartsOn = toInteger((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport toInteger from \"../toInteger/index.js\";\nimport { getDefaultOptions } from \"../defaultOptions/index.js\";\nexport default function getUTCWeekYear(dirtyDate, options) {\n  var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;\n\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var defaultOptions = getDefaultOptions();\n  var firstWeekContainsDate = toInteger((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, options);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, options);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getUTCWeekYear from \"../getUTCWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport toInteger from \"../toInteger/index.js\";\nimport { getDefaultOptions } from \"../defaultOptions/index.js\";\nexport default function startOfUTCWeekYear(dirtyDate, options) {\n  var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;\n\n  requiredArgs(1, arguments);\n  var defaultOptions = getDefaultOptions();\n  var firstWeekContainsDate = toInteger((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1);\n  var year = getUTCWeekYear(dirtyDate, options);\n  var firstWeek = new Date(0);\n  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCWeek(firstWeek, options);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport startOfUTCWeekYear from \"../startOfUTCWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000;\nexport default function getUTCWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","export default function addLeadingZeros(number, targetLength) {\n  var sign = number < 0 ? '-' : '';\n  var output = Math.abs(number).toString();\n\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n\n  return sign + output;\n}","import addLeadingZeros from \"../../addLeadingZeros/index.js\";\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nvar formatters = {\n  // Year\n  y: function y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === 'yy' ? year % 100 : year, token.length);\n  },\n  // Month\n  M: function M(date, token) {\n    var month = date.getUTCMonth();\n    return token === 'M' ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n  // Day of the month\n  d: function d(date, token) {\n    return addLeadingZeros(date.getUTCDate(), token.length);\n  },\n  // AM or PM\n  a: function a(date, token) {\n    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return dayPeriodEnumValue.toUpperCase();\n\n      case 'aaa':\n        return dayPeriodEnumValue;\n\n      case 'aaaaa':\n        return dayPeriodEnumValue[0];\n\n      case 'aaaa':\n      default:\n        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';\n    }\n  },\n  // Hour [1-12]\n  h: function h(date, token) {\n    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);\n  },\n  // Hour [0-23]\n  H: function H(date, token) {\n    return addLeadingZeros(date.getUTCHours(), token.length);\n  },\n  // Minute\n  m: function m(date, token) {\n    return addLeadingZeros(date.getUTCMinutes(), token.length);\n  },\n  // Second\n  s: function s(date, token) {\n    return addLeadingZeros(date.getUTCSeconds(), token.length);\n  },\n  // Fraction of second\n  S: function S(date, token) {\n    var numberOfDigits = token.length;\n    var milliseconds = date.getUTCMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));\n    return addLeadingZeros(fractionalSeconds, token.length);\n  }\n};\nexport default formatters;","import getUTCDayOfYear from \"../../../_lib/getUTCDayOfYear/index.js\";\nimport getUTCISOWeek from \"../../../_lib/getUTCISOWeek/index.js\";\nimport getUTCISOWeekYear from \"../../../_lib/getUTCISOWeekYear/index.js\";\nimport getUTCWeek from \"../../../_lib/getUTCWeek/index.js\";\nimport getUTCWeekYear from \"../../../_lib/getUTCWeekYear/index.js\";\nimport addLeadingZeros from \"../../addLeadingZeros/index.js\";\nimport lightFormatters from \"../lightFormatters/index.js\";\nvar dayPeriodEnum = {\n  am: 'am',\n  pm: 'pm',\n  midnight: 'midnight',\n  noon: 'noon',\n  morning: 'morning',\n  afternoon: 'afternoon',\n  evening: 'evening',\n  night: 'night'\n};\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\nvar formatters = {\n  // Era\n  G: function G(date, token, localize) {\n    var era = date.getUTCFullYear() > 0 ? 1 : 0;\n\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return localize.era(era, {\n          width: 'abbreviated'\n        });\n      // A, B\n\n      case 'GGGGG':\n        return localize.era(era, {\n          width: 'narrow'\n        });\n      // Anno Domini, Before Christ\n\n      case 'GGGG':\n      default:\n        return localize.era(era, {\n          width: 'wide'\n        });\n    }\n  },\n  // Year\n  y: function y(date, token, localize) {\n    // Ordinal number\n    if (token === 'yo') {\n      var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n      var year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, {\n        unit: 'year'\n      });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n  // Local week-numbering year\n  Y: function Y(date, token, localize, options) {\n    var signedWeekYear = getUTCWeekYear(date, options); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear; // Two digit year\n\n    if (token === 'YY') {\n      var twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    } // Ordinal number\n\n\n    if (token === 'Yo') {\n      return localize.ordinalNumber(weekYear, {\n        unit: 'year'\n      });\n    } // Padding\n\n\n    return addLeadingZeros(weekYear, token.length);\n  },\n  // ISO week-numbering year\n  R: function R(date, token) {\n    var isoWeekYear = getUTCISOWeekYear(date); // Padding\n\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function u(date, token) {\n    var year = date.getUTCFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n  // Quarter\n  Q: function Q(date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'Q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'QQ':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'Qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'QQQ':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'QQQQQ':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'QQQQ':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone quarter\n  q: function q(date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'qq':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'qqq':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'qqqqq':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'qqqq':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Month\n  M: function M(date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      case 'M':\n      case 'MM':\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n\n      case 'Mo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'MMM':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // J, F, ..., D\n\n      case 'MMMMM':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // January, February, ..., December\n\n      case 'MMMM':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone month\n  L: function L(date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return String(month + 1);\n      // 01, 02, ..., 12\n\n      case 'LL':\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n\n      case 'Lo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'LLL':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // J, F, ..., D\n\n      case 'LLLLL':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // January, February, ..., December\n\n      case 'LLLL':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Local week of year\n  w: function w(date, token, localize, options) {\n    var week = getUTCWeek(date, options);\n\n    if (token === 'wo') {\n      return localize.ordinalNumber(week, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n  // ISO week of year\n  I: function I(date, token, localize) {\n    var isoWeek = getUTCISOWeek(date);\n\n    if (token === 'Io') {\n      return localize.ordinalNumber(isoWeek, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n  // Day of the month\n  d: function d(date, token, localize) {\n    if (token === 'do') {\n      return localize.ordinalNumber(date.getUTCDate(), {\n        unit: 'date'\n      });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n  // Day of year\n  D: function D(date, token, localize) {\n    var dayOfYear = getUTCDayOfYear(date);\n\n    if (token === 'Do') {\n      return localize.ordinalNumber(dayOfYear, {\n        unit: 'dayOfYear'\n      });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n  // Day of week\n  E: function E(date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n\n    switch (token) {\n      // Tue\n      case 'E':\n      case 'EE':\n      case 'EEE':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'EEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'EEEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'EEEE':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Local day of week\n  e: function e(date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case 'e':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'ee':\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n\n      case 'eo':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'eee':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'eeeee':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'eeeeee':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'eeee':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone local day of week\n  c: function c(date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case 'c':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'cc':\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n\n      case 'co':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'ccc':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // T\n\n      case 'ccccc':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // Tu\n\n      case 'cccccc':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'standalone'\n        });\n      // Tuesday\n\n      case 'cccc':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // ISO day of week\n  i: function i(date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n\n    switch (token) {\n      // 2\n      case 'i':\n        return String(isoDayOfWeek);\n      // 02\n\n      case 'ii':\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n\n      case 'io':\n        return localize.ordinalNumber(isoDayOfWeek, {\n          unit: 'day'\n        });\n      // Tue\n\n      case 'iii':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'iiiii':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'iiiiii':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'iiii':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM or PM\n  a: function a(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'aaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n\n      case 'aaaaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'aaaa':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM, PM, midnight, noon\n  b: function b(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    }\n\n    switch (token) {\n      case 'b':\n      case 'bb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'bbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n\n      case 'bbbbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'bbbb':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: function B(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'BBBBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'BBBB':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Hour [1-12]\n  h: function h(date, token, localize) {\n    if (token === 'ho') {\n      var hours = date.getUTCHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n  // Hour [0-23]\n  H: function H(date, token, localize) {\n    if (token === 'Ho') {\n      return localize.ordinalNumber(date.getUTCHours(), {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n  // Hour [0-11]\n  K: function K(date, token, localize) {\n    var hours = date.getUTCHours() % 12;\n\n    if (token === 'Ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Hour [1-24]\n  k: function k(date, token, localize) {\n    var hours = date.getUTCHours();\n    if (hours === 0) hours = 24;\n\n    if (token === 'ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Minute\n  m: function m(date, token, localize) {\n    if (token === 'mo') {\n      return localize.ordinalNumber(date.getUTCMinutes(), {\n        unit: 'minute'\n      });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n  // Second\n  s: function s(date, token, localize) {\n    if (token === 'so') {\n      return localize.ordinalNumber(date.getUTCSeconds(), {\n        unit: 'second'\n      });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n  // Fraction of second\n  S: function S(date, token) {\n    return lightFormatters.S(date, token);\n  },\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function X(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return 'Z';\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n\n      case 'XXXX':\n      case 'XX':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function x(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n\n      case 'xxxx':\n      case 'xx':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (GMT)\n  O: function O(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (specific non-location)\n  z: function z(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'zzzz':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Seconds timestamp\n  t: function t(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = Math.floor(originalDate.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n  // Milliseconds timestamp\n  T: function T(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = originalDate.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  }\n};\n\nfunction formatTimezoneShort(offset, dirtyDelimiter) {\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n\n  var delimiter = dirtyDelimiter || '';\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+';\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n\n  return formatTimezone(offset, dirtyDelimiter);\n}\n\nfunction formatTimezone(offset, dirtyDelimiter) {\n  var delimiter = dirtyDelimiter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  var minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n\nexport default formatters;","var dateLongFormatter = function dateLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'P':\n      return formatLong.date({\n        width: 'short'\n      });\n\n    case 'PP':\n      return formatLong.date({\n        width: 'medium'\n      });\n\n    case 'PPP':\n      return formatLong.date({\n        width: 'long'\n      });\n\n    case 'PPPP':\n    default:\n      return formatLong.date({\n        width: 'full'\n      });\n  }\n};\n\nvar timeLongFormatter = function timeLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'p':\n      return formatLong.time({\n        width: 'short'\n      });\n\n    case 'pp':\n      return formatLong.time({\n        width: 'medium'\n      });\n\n    case 'ppp':\n      return formatLong.time({\n        width: 'long'\n      });\n\n    case 'pppp':\n    default:\n      return formatLong.time({\n        width: 'full'\n      });\n  }\n};\n\nvar dateTimeLongFormatter = function dateTimeLongFormatter(pattern, formatLong) {\n  var matchResult = pattern.match(/(P+)(p+)?/) || [];\n  var datePattern = matchResult[1];\n  var timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  var dateTimeFormat;\n\n  switch (datePattern) {\n    case 'P':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'short'\n      });\n      break;\n\n    case 'PP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'medium'\n      });\n      break;\n\n    case 'PPP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'long'\n      });\n      break;\n\n    case 'PPPP':\n    default:\n      dateTimeFormat = formatLong.dateTime({\n        width: 'full'\n      });\n      break;\n  }\n\n  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));\n};\n\nvar longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};\nexport default longFormatters;","/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport default function getTimezoneOffsetInMilliseconds(date) {\n  var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n  utcDate.setUTCFullYear(date.getFullYear());\n  return date.getTime() - utcDate.getTime();\n}","var protectedDayOfYearTokens = ['D', 'DD'];\nvar protectedWeekYearTokens = ['YY', 'YYYY'];\nexport function isProtectedDayOfYearToken(token) {\n  return protectedDayOfYearTokens.indexOf(token) !== -1;\n}\nexport function isProtectedWeekYearToken(token) {\n  return protectedWeekYearTokens.indexOf(token) !== -1;\n}\nexport function throwProtectedError(token, format, input) {\n  if (token === 'YYYY') {\n    throw new RangeError(\"Use `yyyy` instead of `YYYY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\"));\n  } else if (token === 'YY') {\n    throw new RangeError(\"Use `yy` instead of `YY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\"));\n  } else if (token === 'D') {\n    throw new RangeError(\"Use `d` instead of `D` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\"));\n  } else if (token === 'DD') {\n    throw new RangeError(\"Use `dd` instead of `DD` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\"));\n  }\n}","var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'less than a second',\n    other: 'less than {{count}} seconds'\n  },\n  xSeconds: {\n    one: '1 second',\n    other: '{{count}} seconds'\n  },\n  halfAMinute: 'half a minute',\n  lessThanXMinutes: {\n    one: 'less than a minute',\n    other: 'less than {{count}} minutes'\n  },\n  xMinutes: {\n    one: '1 minute',\n    other: '{{count}} minutes'\n  },\n  aboutXHours: {\n    one: 'about 1 hour',\n    other: 'about {{count}} hours'\n  },\n  xHours: {\n    one: '1 hour',\n    other: '{{count}} hours'\n  },\n  xDays: {\n    one: '1 day',\n    other: '{{count}} days'\n  },\n  aboutXWeeks: {\n    one: 'about 1 week',\n    other: 'about {{count}} weeks'\n  },\n  xWeeks: {\n    one: '1 week',\n    other: '{{count}} weeks'\n  },\n  aboutXMonths: {\n    one: 'about 1 month',\n    other: 'about {{count}} months'\n  },\n  xMonths: {\n    one: '1 month',\n    other: '{{count}} months'\n  },\n  aboutXYears: {\n    one: 'about 1 year',\n    other: 'about {{count}} years'\n  },\n  xYears: {\n    one: '1 year',\n    other: '{{count}} years'\n  },\n  overXYears: {\n    one: 'over 1 year',\n    other: 'over {{count}} years'\n  },\n  almostXYears: {\n    one: 'almost 1 year',\n    other: 'almost {{count}} years'\n  }\n};\n\nvar formatDistance = function formatDistance(token, count, options) {\n  var result;\n  var tokenValue = formatDistanceLocale[token];\n\n  if (typeof tokenValue === 'string') {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace('{{count}}', count.toString());\n  }\n\n  if (options !== null && options !== void 0 && options.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return 'in ' + result;\n    } else {\n      return result + ' ago';\n    }\n  }\n\n  return result;\n};\n\nexport default formatDistance;","export default function buildFormatLongFn(args) {\n  return function () {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    // TODO: Remove String()\n    var width = options.width ? String(options.width) : args.defaultWidth;\n    var format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}","import buildFormatLongFn from \"../../../_lib/buildFormatLongFn/index.js\";\nvar dateFormats = {\n  full: 'EEEE, MMMM do, y',\n  long: 'MMMM do, y',\n  medium: 'MMM d, y',\n  short: 'MM/dd/yyyy'\n};\nvar timeFormats = {\n  full: 'h:mm:ss a zzzz',\n  long: 'h:mm:ss a z',\n  medium: 'h:mm:ss a',\n  short: 'h:mm a'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  short: '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","var formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: 'P'\n};\n\nvar formatRelative = function formatRelative(token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token];\n};\n\nexport default formatRelative;","export default function buildLocalizeFn(args) {\n  return function (dirtyIndex, options) {\n    var context = options !== null && options !== void 0 && options.context ? String(options.context) : 'standalone';\n    var valuesArray;\n\n    if (context === 'formatting' && args.formattingValues) {\n      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      var width = options !== null && options !== void 0 && options.width ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      var _defaultWidth = args.defaultWidth;\n\n      var _width = options !== null && options !== void 0 && options.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[_width] || args.values[_defaultWidth];\n    }\n\n    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex; // @ts-ignore: For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n\n    return valuesArray[index];\n  };\n}","import buildLocalizeFn from \"../../../_lib/buildLocalizeFn/index.js\";\nvar eraValues = {\n  narrow: ['B', 'A'],\n  abbreviated: ['BC', 'AD'],\n  wide: ['Before Christ', 'Anno Domini']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\n  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter']\n}; // Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\n\nvar monthValues = {\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n};\nvar dayValues = {\n  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  }\n};\n\nvar ordinalNumber = function ordinalNumber(dirtyNumber, _options) {\n  var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  var rem100 = number % 100;\n\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st';\n\n      case 2:\n        return number + 'nd';\n\n      case 3:\n        return number + 'rd';\n    }\n  }\n\n  return number + 'th';\n};\n\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function argumentCallback(quarter) {\n      return quarter - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nexport default localize;","export default function buildMatchFn(args) {\n  return function (string) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var width = options.width;\n    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n    var matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n    var key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function (pattern) {\n      return pattern.test(matchedString);\n    }) : findKey(parsePatterns, function (pattern) {\n      return pattern.test(matchedString);\n    });\n    var value;\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    var rest = string.slice(matchedString.length);\n    return {\n      value: value,\n      rest: rest\n    };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (var key in object) {\n    if (object.hasOwnProperty(key) && predicate(object[key])) {\n      return key;\n    }\n  }\n\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (var key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n\n  return undefined;\n}","import buildMatchFn from \"../../../_lib/buildMatchFn/index.js\";\nimport buildMatchPatternFn from \"../../../_lib/buildMatchPatternFn/index.js\";\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n};\nvar parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function valueCallback(value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function valueCallback(index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","export default function buildMatchPatternFn(args) {\n  return function (string) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    var matchedString = matchResult[0];\n    var parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    var rest = string.slice(matchedString.length);\n    return {\n      value: value,\n      rest: rest\n    };\n  };\n}","import defaultLocale from \"../../locale/en-US/index.js\";\nexport default defaultLocale;","import formatDistance from \"./_lib/formatDistance/index.js\";\nimport formatLong from \"./_lib/formatLong/index.js\";\nimport formatRelative from \"./_lib/formatRelative/index.js\";\nimport localize from \"./_lib/localize/index.js\";\nimport match from \"./_lib/match/index.js\";\n\n/**\n * @type {Locale}\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}\n * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}\n */\nvar locale = {\n  code: 'en-US',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0\n    /* Sunday */\n    ,\n    firstWeekContainsDate: 1\n  }\n};\nexport default locale;","import isValid from \"../isValid/index.js\";\nimport subMilliseconds from \"../subMilliseconds/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport formatters from \"../_lib/format/formatters/index.js\";\nimport longFormatters from \"../_lib/format/longFormatters/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from \"../_lib/protectedTokens/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { getDefaultOptions } from \"../_lib/defaultOptions/index.js\";\nimport defaultLocale from \"../_lib/defaultLocale/index.js\"; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name format\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}\n *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @param {Date|Number} date - the original date\n * @param {String} format - the string of tokens\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\n\nexport default function format(dirtyDate, dirtyFormatStr, options) {\n  var _ref, _options$locale, _ref2, _ref3, _ref4, _options$firstWeekCon, _options$locale2, _options$locale2$opti, _defaultOptions$local, _defaultOptions$local2, _ref5, _ref6, _ref7, _options$weekStartsOn, _options$locale3, _options$locale3$opti, _defaultOptions$local3, _defaultOptions$local4;\n\n  requiredArgs(2, arguments);\n  var formatStr = String(dirtyFormatStr);\n  var defaultOptions = getDefaultOptions();\n  var locale = (_ref = (_options$locale = options === null || options === void 0 ? void 0 : options.locale) !== null && _options$locale !== void 0 ? _options$locale : defaultOptions.locale) !== null && _ref !== void 0 ? _ref : defaultLocale;\n  var firstWeekContainsDate = toInteger((_ref2 = (_ref3 = (_ref4 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale2 = options.locale) === null || _options$locale2 === void 0 ? void 0 : (_options$locale2$opti = _options$locale2.options) === null || _options$locale2$opti === void 0 ? void 0 : _options$locale2$opti.firstWeekContainsDate) !== null && _ref4 !== void 0 ? _ref4 : defaultOptions.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : 1); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var weekStartsOn = toInteger((_ref5 = (_ref6 = (_ref7 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale3 = options.locale) === null || _options$locale3 === void 0 ? void 0 : (_options$locale3$opti = _options$locale3.options) === null || _options$locale3$opti === void 0 ? void 0 : _options$locale3$opti.weekStartsOn) !== null && _ref7 !== void 0 ? _ref7 : defaultOptions.weekStartsOn) !== null && _ref6 !== void 0 ? _ref6 : (_defaultOptions$local3 = defaultOptions.locale) === null || _defaultOptions$local3 === void 0 ? void 0 : (_defaultOptions$local4 = _defaultOptions$local3.options) === null || _defaultOptions$local4 === void 0 ? void 0 : _defaultOptions$local4.weekStartsOn) !== null && _ref5 !== void 0 ? _ref5 : 0); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\n\n\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);\n  var utcDate = subMilliseconds(originalDate, timezoneOffset);\n  var formatterOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale,\n    _originalDate: originalDate\n  };\n  var result = formatStr.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp).map(function (substring) {\n    // Replace two single quote characters with one single quote character\n    if (substring === \"''\") {\n      return \"'\";\n    }\n\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === \"'\") {\n      return cleanEscapedString(substring);\n    }\n\n    var formatter = formatters[firstCharacter];\n\n    if (formatter) {\n      if (!(options !== null && options !== void 0 && options.useAdditionalWeekYearTokens) && isProtectedWeekYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, String(dirtyDate));\n      }\n\n      if (!(options !== null && options !== void 0 && options.useAdditionalDayOfYearTokens) && isProtectedDayOfYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, String(dirtyDate));\n      }\n\n      return formatter(utcDate, substring, locale.localize, formatterOptions);\n    }\n\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n    }\n\n    return substring;\n  }).join('');\n  return result;\n}\n\nfunction cleanEscapedString(input) {\n  var matched = input.match(escapedStringRegExp);\n\n  if (!matched) {\n    return input;\n  }\n\n  return matched[1].replace(doubleQuoteRegExp, \"'\");\n}","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","var parse = require('inline-style-parser');\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\n/**\n * Stringify one point, a position (start and end points), or a node’s\n * positional information.\n *\n * @param {Node|NodeLike|Position|Point|null} [value]\n * @returns {string}\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point|undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position|undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number|undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\nexport class VFileMessage extends Error {\n  /**\n   * Constructor of a message for `reason` at `place` from `origin`.\n   * When an error is passed in as `reason`, copies the `stack`.\n   *\n   * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).\n   * @param {string} [origin] Place in code the message originates from (`string`, optional).\n   */\n  constructor(reason, place, origin) {\n    /** @type {[string|null, string|null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`\n    this.name = stringifyPosition(place) || '1:1'\n    this.message = typeof reason === 'object' ? reason.message : reason\n    this.stack = typeof reason === 'object' ? reason.stack : ''\n\n    /**\n     * Reason for message.\n     * @type {string}\n     */\n    this.reason = this.message\n    /**\n     * If true, marks associated file as no longer processable.\n     * @type {boolean?}\n     */\n    // eslint-disable-next-line no-unused-expressions\n    this.fatal\n    /**\n     * Starting line of error.\n     * @type {number?}\n     */\n    this.line = position.start.line\n    /**\n     * Starting column of error.\n     * @type {number?}\n     */\n    this.column = position.start.column\n    /**\n     * Namespace of warning.\n     * @type {string?}\n     */\n    this.source = parts[0]\n    /**\n     * Category of message.\n     * @type {string?}\n     */\n    this.ruleId = parts[1]\n    /**\n     * Full range information, when available.\n     * Has start and end properties, both set to an object with line and column, set to number?.\n     * @type {Position?}\n     */\n    this.position = position\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * You can use this to specify the source value that’s being reported, which\n     * is deemed incorrect.\n     * @type {string?}\n     */\n    this.actual\n    /**\n     * You can use this to suggest values that should be used instead of\n     * `actual`, one or more values that are deemed as acceptable.\n     * @type {Array<string>?}\n     */\n    this.expected\n    /**\n     * You may add a file property with a path of a file (used throughout the VFile ecosystem).\n     * @type {string?}\n     */\n    this.file\n    /**\n     * You may add a url property with a link to documentation for the message.\n     * @type {string?}\n     */\n    this.url\n    /**\n     * You may add a note property with a long form description of the message (supported by vfile-reporter).\n     * @type {string?}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * @param {string} path\n * @param {string} [ext]\n * @returns {string}\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * @param {Array<string>} segments\n * @returns {string}\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string|undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Note: `normalize` is not exposed as `path.normalize`, so some code is\n * manually removed from it.\n *\n * @param {string} path\n * @returns {string}\n */\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n * @param {boolean} allowAboveRoot\n * @returns {string}\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number|undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {string} path\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * @param {unknown} fileURLOrPath\n * @returns {fileURLOrPath is URL}\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileURLOrPath) {\n  return (\n    fileURLOrPath !== null &&\n    typeof fileURLOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.origin\n  )\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string|URL} path\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * @param {URL} url\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n\nexport {isUrl} from './minurl.shared.js'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {Record<string, unknown> & {type: string, position?: Position|undefined}} NodeLike\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n *\n * @typedef {'ascii'|'utf8'|'utf-8'|'utf16le'|'ucs2'|'ucs-2'|'base64'|'base64url'|'latin1'|'binary'|'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *   This is a copy of the typing from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Value|Options|VFile|URL} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n * @property {Value} [value]\n * @property {string} [cwd]\n * @property {Array<string>} [history]\n * @property {string|URL} [path]\n * @property {string} [basename]\n * @property {string} [stem]\n * @property {string} [extname]\n * @property {string} [dirname]\n * @property {Data} [data]\n *\n * @typedef Map\n *   Raw source map, see:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n * @property {Array<string>} sources\n * @property {Array<string>} names\n * @property {string|undefined} [sourceRoot]\n * @property {Array<string>|undefined} [sourcesContent]\n * @property {string} mappings\n * @property {string} file\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration: a bunch of keys that will be shallow copied over to the new\n *   file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n * @typedef {<T = ReporterSettings>(files: Array<VFile>, options: T) => string} Reporter\n */\n\nimport buffer from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n// Order of setting (least specific to most), we need this because otherwise\n// `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n// stem can be set.\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * If `options` is `string` or `Buffer`, it’s treated as `{value: options}`.\n   * If `options` is a `URL`, it’s treated as `{path: options}`.\n   * If `options` is a `VFile`, shallow copies its data over to the new file.\n   * All fields in `options` are set on the newly created `VFile`.\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * It’s not possible to set either `dirname` or `extname` without setting\n   * either `history`, `path`, `basename`, or `stem` as well.\n   *\n   * @param {Compatible} [value]\n   */\n  constructor(value) {\n    /** @type {Options} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      // @ts-expect-error Looks like a buffer.\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      // @ts-expect-error Looks like file or options.\n      options = value\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of filepaths the file moved between.\n     * The first is the original path and the last is the current path.\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     * This is used by vfile reporters.\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Sometimes files have a non-string, compiled, representation.\n     * This can be stored in the `result` field.\n     * One example is when turning markdown into React nodes.\n     * This is used by unified to store non-string results.\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Sometimes files have a source map associated with them.\n     * This can be stored in the `map` field.\n     * This should be a `Map` type, which is equivalent to the `RawSourceMap`\n     * type from the `source-map` module.\n     * @type {Map|undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (prop in options && options[prop] !== undefined) {\n        // @ts-expect-error: TS is confused by the different types for `history`.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) this[prop] = options[prop]\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   * @param {string|URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding} [encoding='utf8']\n   *   When `value` is a `Buffer`, `encoding` is a character encoding to\n   *   understand it as (default: `'utf8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding)\n  }\n\n  /**\n   * Constructs a new `VFileMessage`, where `fatal` is set to `false`, and\n   * associates it with the file by adding it to `vfile.messages` and setting\n   * `message.file` to the current filepath.\n   *\n   * @param {string|Error} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates an informational message where\n   * `fatal` is set to `null`.\n   *\n   * @param {string|Error} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates a fatal message where `fatal` is\n   * set to `true`, and then immediately throws it.\n   *\n   * > 👉 **Note**: a fatal error means that a file is no longer processable.\n   *\n   * @param {string|Error} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {never}\n   *   Message.\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {void}\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {asserts part is string}\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string|undefined} path\n * @param {string} name\n * @returns {asserts path is string}\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/**\n * @typedef Options\n * @property {boolean} [includeImageAlt=true]\n */\n\n/**\n * Get the text content of a node.\n * Prefer the node’s plain-text fields, otherwise serialize its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} node\n * @param {Options} [options]\n * @returns {string}\n */\nexport function toString(node, options) {\n  var {includeImageAlt = true} = options || {}\n  return one(node, includeImageAlt)\n}\n\n/**\n * @param {unknown} node\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction one(node, includeImageAlt) {\n  return (\n    (node &&\n      typeof node === 'object' &&\n      // @ts-ignore looks like a literal.\n      (node.value ||\n        // @ts-ignore looks like an image.\n        (includeImageAlt ? node.alt : '') ||\n        // @ts-ignore looks like a parent.\n        ('children' in node && all(node.children, includeImageAlt)) ||\n        (Array.isArray(node) && all(node, includeImageAlt)))) ||\n    ''\n  )\n}\n\n/**\n * @param {Array.<unknown>} values\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction all(values, includeImageAlt) {\n  /** @type {Array.<string>} */\n  var result = []\n  var index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt)\n  }\n\n  return result.join('')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {number} start\n * @param {number} remove\n * @param {T[]} items\n * @returns {void}\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {unknown[]} */\n\n  let parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove) // @ts-expect-error Hush, it’s fine.\n    ;[].splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) [].splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0) // @ts-expect-error Hush, it’s fine.\n      ;[].splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {T[]} items\n * @returns {T[]}\n */\n\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine several syntax extensions into one.\n *\n * @param {Extension[]} extensions List of syntax extensions.\n * @returns {NormalizedExtension} A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all Extension to merge into.\n * @param {Extension} extension Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    for (code in right) {\n      if (!hasOwnProperty.call(left, code)) left[code] = []\n      const value = right[code]\n      constructs(\n        // @ts-expect-error Looks like a list.\n        left[code],\n        Array.isArray(value) ? value : value ? [value] : []\n      )\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {unknown[]} existing\n * @param {unknown[]} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {unknown[]} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine several HTML extensions into one.\n *\n * @param {HtmlExtension[]} htmlExtensions List of HTML extensions.\n * @returns {HtmlExtension} A single combined extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all Extension to merge into.\n * @param {HtmlExtension} extension Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nexport const unicodePunctuationRegex =\n  /[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n */\n\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n */\n\nexport const asciiDigit = regexCheck(/\\d/)\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n */\n\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n */\n\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n */\n\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n */\n\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n\nexport const unicodeWhitespace = regexCheck(/\\s/)\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => code is number}\n */\n\nfunction regexCheck(regex) {\n  return check\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code Character code\n   * @returns {code is number} Whether the character code matches the bound regex\n   */\n\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownSpace} from 'micromark-util-character'\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {string} type\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n/** @type {Initializer} */\n\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n\n  let previous\n  return contentStart\n  /** @type {State} */\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n  /** @type {State} */\n\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Point} Point\n */\n\n/**\n * @typedef {Record<string, unknown>} StackState\n * @typedef {[Construct, StackState]} StackItem\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\n\nexport const document = {\n  tokenize: initializeDocument\n}\n/** @type {Construct} */\n\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n/** @type {Initializer} */\n\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext|undefined} */\n\n  let childFlow\n  /** @type {Token|undefined} */\n\n  let childToken\n  /** @type {number} */\n\n  let lineStartOffset\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    } // Done.\n\n    return checkNewContainers(code)\n  }\n  /** @type {State} */\n\n  function documentContinue(code) {\n    continued++ // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n\n      if (childFlow) {\n        closeFlow()\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point|undefined} */\n\n      let point // Find the flow chunk.\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      let index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n\n    return start(code)\n  }\n  /** @type {State} */\n\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      } // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      } // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    } // Check if there is a new container.\n\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n  /** @type {State} */\n\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n  /** @type {State} */\n\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n  /** @type {State} */\n\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState]) // Try another.\n\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n  /** @type {State} */\n\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow')) // Get ready for the next line.\n\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n  /**\n   * @param {Token} token\n   * @param {boolean} [eof]\n   * @returns {void}\n   */\n\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream) // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset && // …and either is not ended yet…\n          (!childFlow.events[index][1].end || // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean|undefined} */\n\n      let seen\n      /** @type {Point|undefined} */\n\n      let point // Find the previous chunk (the one before the lazy line).\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n\n          seen = true\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n    }\n  }\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n\n  function exitContainers(size) {\n    let index = stack.length // Exit open containers.\n\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n  /** @type {State} */\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {splice} from 'micromark-util-chunked'\n\n/**\n * Tokenize subcontent.\n *\n * @param {Event[]} events\n * @returns {boolean}\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n\n  let event\n  /** @type {number|undefined} */\n\n  let lineIndex\n  /** @type {number} */\n\n  let otherIndex\n  /** @type {Event} */\n\n  let otherEvent\n  /** @type {Event[]} */\n\n  let parameters\n  /** @type {Event[]} */\n\n  let subevents\n  /** @type {boolean|undefined} */\n\n  let more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n/**\n * Tokenize embedded tokens.\n *\n * @param {Event[]} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\n\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {number[]} */\n\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {[number, number][]} */\n\n  const jumps = []\n  /** @type {Record<string, number>} */\n\n  const gaps = {}\n  /** @type {Chunk[]} */\n\n  let stream\n  /** @type {Token|undefined} */\n\n  let previous\n  let index = -1\n  /** @type {Token|undefined} */\n\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start] // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n\n      if (!current.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = current\n    current = current.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  current = token\n\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start) // Help GC.\n\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  } // Help GC.\n\n  tokenizer.events = [] // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  } // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n\n  index = breaks.length\n\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n\n  index = -1\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n/** @type {Construct} */\n\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token} */\n  let previous\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n  /** @type {State} */\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return data\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n  /** @type {State} */\n\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    const tail = self.events[self.events.length - 1]\n\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n/** @type {Initializer} */\n\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n  /** @type {State} */\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n  /** @type {State} */\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n/**\n * @param {'string'|'text'} field\n * @returns {InitialConstruct}\n */\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n  /** @type {Initializer} */\n\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n    /** @type {State} */\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n    /** @type {State} */\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n\n      const list = constructs[code]\n      let index = -1\n\n      if (list) {\n        while (++index < list.length) {\n          const item = list[index]\n\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n  }\n}\n/**\n * @param {Resolver} [extraResolver]\n * @returns {Resolver}\n */\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n  /** @type {Resolver} */\n\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number|undefined} */\n\n    let enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\n\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean|undefined} */\n\n      let tabs\n\n      while (index--) {\n        const chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {{resolveAll?: Resolver}[]} constructs\n * @param {Event[]} events\n * @param {TokenizeContext} context\n * @returns {Event[]}\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Resolver[]} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n */\n\n/**\n * @typedef Info\n * @property {() => void} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_index'|'_bufferIndex'>} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n\n  let chunks = []\n  /** @type {Array<Token>} */\n\n  let stack = []\n  /** @type {boolean|undefined} */\n\n  let consumed = true\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n  /**\n   * The state function.\n   *\n   * @type {State|void}\n   */\n\n  let state = initialize.tokenize.call(context, effects)\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n\n  let expectedCode\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n\n  return context\n  /** @type {TokenizeContext['write']} */\n\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n  /** @type {TokenizeContext['sliceStream']} */\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n  /** @type {TokenizeContext['now']} */\n\n  function now() {\n    return Object.assign({}, point)\n  }\n  /** @type {TokenizeContext['defineSkip']} */\n\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n  /** @type {Effects['consume']} */\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n\n    consumed = true\n  }\n  /** @type {Effects['enter']} */\n\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n  /** @type {Effects['exit']} */\n\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {Record<string, unknown>} [fields]\n   */\n\n  function constructFactory(onreturn, fields) {\n    return hook\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Construct|Array<Construct>|ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State} [bogusState]\n     * @returns {State}\n     */\n\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n\n      let constructIndex\n      /** @type {Construct} */\n\n      let currentConstruct\n      /** @type {Info} */\n\n      let info\n      return Array.isArray(constructs)\n        ? /* c8 ignore next 1 */\n          handleListOfConstructs(constructs)\n        : 'tokenize' in constructs // @ts-expect-error Looks like a construct.\n        ? handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n\n      function handleMapOfConstructs(map) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n\n        if (list.length === 0) {\n          return bogusState\n        }\n\n        return handleConstruct(list[constructIndex])\n      }\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n\n      function handleConstruct(construct) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n      /** @type {State} */\n\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n      /** @type {State} */\n\n      function nok(code) {\n        consumed = true\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'start'|'end'>} token\n * @returns {Array<Chunk>}\n */\n\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n\n  let view\n\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean} [expandTabs=false]\n * @returns {string}\n */\n\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n\n  const result = []\n  /** @type {boolean|undefined} */\n\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n\n        case -4: {\n          value = '\\n'\n          break\n        }\n\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @typedef {Record<string, unknown> & {marker: Code, type: string, size: number}} ListContainerState\n * @typedef {TokenizeContext & {containerState: ListContainerState}} TokenizeContextWithState\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n/** @type {Construct} */\n\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n/** @type {Construct} */\n\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n/** @type {Construct} */\n\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n  /**\n   * @type {State}\n   **/\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n  /** @type {State} */\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n  /** @type {State} */\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n  /** @type {State} */\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n/**\n * @type {Exiter}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n/** @type {Exiter} */\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} literalType\n * @param {string} literalMarkerType\n * @param {string} rawType\n * @param {string} stringType\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (code === null || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n  /** @type {State} */\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n  /** @type {State} */\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* To do: remove in the future once we’ve switched from\n       * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n       * which doesn’t need this */\n\n      /* Hidden footnotes hook */\n\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n  /** @type {State} */\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n  /** @type {State} */\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n  /** @type {State} */\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n  /** @type {State} */\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n","/**\n * Normalize an identifier (such as used in definitions).\n *\n * @param {string} value\n * @returns {string}\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n/** @type {Construct} */\n\nconst titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n\n  let identifier\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (!self.parser.defined.includes(identifier)) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n/** @type {Construct} */\n\nconst indentedContent = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeIndented')\n    return factorySpace(effects, afterStartPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterStartPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? afterPrefix(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContent, afterPrefix, after)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n  /** @type {State} */\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeIndented')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? start(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n/** @type {Resolver} */\n\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n\n  let content\n  /** @type {Token} */\n\n  let text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      // @ts-expect-error Constants are fine to assign.\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  const self = this\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n  /** @type {State} */\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n/** @type {Resolver} */\n\nfunction resolveToSetextUnderline(events, context) {\n  let index = events.length\n  /** @type {number|undefined} */\n\n  let content\n  /** @type {number|undefined} */\n\n  let text\n  /** @type {number|undefined} */\n\n  let definition // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  /** @type {boolean} */\n\n  let paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n  /** @type {State} */\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result\n * in more relaxed rules (condition 6): because they are known blocks, the\n * HTML-like syntax doesn’t have to be strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result in\n * HTML that can include lines w/o exiting, until a closing tag also in this\n * list is found (condition 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * Note that `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n/** @type {Construct} */\n\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n/** @type {Construct} */\n\nconst nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n\n  let kind\n  /** @type {boolean} */\n\n  let startTag\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {Code} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.includes(buffer.toLowerCase())\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting\n\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = null\n    return completeAttributeValueUnquoted(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuoted(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n  /** @type {State} */\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n  /** @type {State} */\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        {\n          tokenize: htmlLineEnd,\n          partial: true\n        },\n        htmlContinueStart,\n        done\n      )(code)\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n  /** @type {Tokenizer} */\n\n  function htmlLineEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {State} */\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.includes(buffer.toLowerCase())) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    } // More dashes.\n\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n\n  const closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  /** @type {Construct} */\n\n  const nonLazyLine = {\n    tokenize: tokenizeNonLazyLine,\n    partial: true\n  }\n  const tail = this.events[this.events.length - 1]\n  const initialPrefix =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n  /** @type {State} */\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n  /** @type {State} */\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n  /** @type {State} */\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n  /** @type {State} */\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n  /** @type {State} */\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n  /** @type {State} */\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : contentStart(code)\n  }\n  /** @type {State} */\n\n  function contentStart(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        nonLazyLine,\n        effects.attempt(\n          closingFenceConstruct,\n          after,\n          initialPrefix\n            ? factorySpace(\n                effects,\n                contentStart,\n                'linePrefix',\n                initialPrefix + 1\n              )\n            : contentStart\n        ),\n        after\n      )(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return contentStart(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeNonLazyLine(effects, ok, nok) {\n    const self = this\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    let size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n    /** @type {State} */\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n    /** @type {State} */\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n    /** @type {State} */\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n\n  let max\n  /** @type {(code: Code) => code is number} */\n\n  let test\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n  /** @type {State} */\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n  /** @type {State} */\n\n  function value(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {asciiPunctuation} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n/** @type {Construct} */\n\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\n\nconst fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\n/** @type {Construct} */\n\nconst collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n/** @type {Resolver} */\n\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  /** @type {Token} */\n\n  let token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n/** @type {Resolver} */\n\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n\n  let token\n  /** @type {number|undefined} */\n\n  let open\n  /** @type {number|undefined} */\n\n  let close\n  /** @type {Event[]} */\n\n  let media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = push(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = push(media, [['enter', text, context]]) // Between.\n\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = push(media, events.slice(close + 1)) // Media close.\n\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n\n  let labelStart\n  /** @type {boolean} */\n\n  let defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n  /** @type {State} */\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n  /** @type {State} */\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n  /** @type {State} */\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n  /** @type {State} */\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function afterLabel(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n\n/**\n * Classify whether a character code represents whitespace, punctuation, or\n * something else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * Note that eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n * @returns {number|undefined}\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Point} Point\n */\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n\n  let open\n  /** @type {Token} */\n\n  let group\n  /** @type {Token} */\n\n  let text\n  /** @type {Token} */\n\n  let openingSequence\n  /** @type {Token} */\n\n  let closingSequence\n  /** @type {number} */\n\n  let use\n  /** @type {Event[]} */\n\n  let nextEvents\n  /** @type {number} */\n\n  let offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    const token = effects.exit('attentionSequence')\n    const after = classifyCharacter(code)\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 1\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n  /** @type {State} */\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n  /** @type {State} */\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n  /** @type {State} */\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n  /** @type {State} */\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>|undefined} */\n\n  let marker\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {State} */\n\n  let returnState\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n  /** @type {State} */\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n  /** @type {State} */\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n  /** @type {State} */\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n  /** @type {State} */\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n  /** @type {State} */\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  /** @type {State} */\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook. */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n/** @type {Resolver} */\n\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n\n  let index\n  /** @type {number|undefined} */\n\n  let enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n/** @type {Previous} */\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n\n  let size\n  /** @type {Token} */\n\n  let token\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n  /** @type {State} */\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n  /** @type {State} */\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  /** @type {State} */\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  /** @type {State} */\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n/** @type {Extension['document']} */\n\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n/** @type {Extension['contentInitial']} */\n\nexport const contentInitial = {\n  [91]: definition\n}\n/** @type {Extension['flowInitial']} */\n\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n/** @type {Extension['flow']} */\n\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n/** @type {Extension['string']} */\n\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n/** @type {Extension['text']} */\n\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n/** @type {Extension['insideSpan']} */\n\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n/** @type {Extension['attentionMarkers']} */\n\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n/** @type {Extension['disable']} */\n\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding} [encoding]\n * @param {boolean} [end=false]\n * @returns {Array<Chunk>}\n */\nconst search = /[\\0\\t\\n\\r]/g\n/**\n * @returns {Preprocessor}\n */\n\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean|undefined} */\n\n  let start = true\n  /** @type {boolean|undefined} */\n\n  let atCarriageReturn\n  return preprocessor\n  /** @type {Preprocessor} */\n\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray|null} */\n\n    let match\n    /** @type {number} */\n\n    let next\n    /** @type {number} */\n\n    let startPosition\n    /** @type {number} */\n\n    let endPosition\n    /** @type {Code} */\n\n    let code // @ts-expect-error `Buffer` does allow an encoding.\n\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n\n            while (column++ < next) chunks.push(-1)\n\n            break\n          }\n\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return String.fromCharCode(code)\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n/**\n * Utility to decode markdown strings (which occur in places such as fenced\n * code info strings, destinations, labels, and titles).\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\n\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  } // Reference.\n\n  const head = $2.charCodeAt(0)\n\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {Root|Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n *\n * @typedef {UnistParent & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @typedef _CompileDataFields\n * @property {boolean|undefined} expectingFirstListItemValue\n * @property {boolean|undefined} flowCodeInside\n * @property {boolean|undefined} setextHeadingSlurpLineEnding\n * @property {boolean|undefined} atHardBreak\n * @property {'collapsed'|'full'} referenceType\n * @property {boolean|undefined} inReference\n * @property {'characterReferenceMarkerHexadecimal'|'characterReferenceMarkerNumeric'} characterReferenceType\n *\n * @typedef {Record<string, unknown> & Partial<_CompileDataFields>} CompileData\n *\n * @typedef {(tree: Root) => Root|void} Transform\n * @typedef {(this: CompileContext, token: Token) => void} Handle\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n * @typedef {Record<string, Record<string, unknown>|Array<unknown>> & {canContainEols: Array<string>, transforms: Array<Transform>, enter: Handles, exit: Handles}} NormalizedExtension\n * @typedef {Partial<NormalizedExtension>} Extension\n *   An mdast extension changes how markdown tokens are turned into mdast.\n *\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token|undefined, right: Token) => void} OnEnterError\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token, right: Token) => void} OnExitError\n *\n * @typedef CompileContext\n *   mdast compiler context\n * @property {Array<Node | Fragment>} stack\n * @property {Array<[Token, OnEnterError|undefined]>} tokenStack\n * @property {(key: string, value?: unknown) => void} setData\n *   Set data into the key-value store.\n * @property {<K extends string>(key: K) => CompileData[K]} getData\n *   Get data from the key-value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<N extends Node>(this: CompileContext, node: N, token: Token, onError?: OnEnterError) => N} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {NormalizedExtension} config\n *   Configuration.\n *\n * @typedef {{mdastExtensions?: Array<Extension|Array<Extension>>}} FromMarkdownOptions\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n */\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n/**\n * @param value Markdown to parse (`string` or `Buffer`).\n * @param [encoding] Character encoding to understand `value` as when it’s a `Buffer` (`string`, default: `'utf8'`).\n * @param [options] Configuration\n */\n\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options) => Root) &\n   *   ((value: Value, options?: Options) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding} [encoding]\n   * @param {Options} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n\n    return compiler(options)(\n      postprocess(\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options} [options]\n */\n\nfunction compiler(options = {}) {\n  /** @type {NormalizedExtension} */\n  // @ts-expect-error: our base has all required fields, so the result will too.\n  const config = configure(\n    {\n      transforms: [],\n      canContainEols: [\n        'emphasis',\n        'fragment',\n        'heading',\n        'paragraph',\n        'strong'\n      ],\n      enter: {\n        autolink: opener(link),\n        autolinkProtocol: onenterdata,\n        autolinkEmail: onenterdata,\n        atxHeading: opener(heading),\n        blockQuote: opener(blockQuote),\n        characterEscape: onenterdata,\n        characterReference: onenterdata,\n        codeFenced: opener(codeFlow),\n        codeFencedFenceInfo: buffer,\n        codeFencedFenceMeta: buffer,\n        codeIndented: opener(codeFlow, buffer),\n        codeText: opener(codeText, buffer),\n        codeTextData: onenterdata,\n        data: onenterdata,\n        codeFlowValue: onenterdata,\n        definition: opener(definition),\n        definitionDestinationString: buffer,\n        definitionLabelString: buffer,\n        definitionTitleString: buffer,\n        emphasis: opener(emphasis),\n        hardBreakEscape: opener(hardBreak),\n        hardBreakTrailing: opener(hardBreak),\n        htmlFlow: opener(html, buffer),\n        htmlFlowData: onenterdata,\n        htmlText: opener(html, buffer),\n        htmlTextData: onenterdata,\n        image: opener(image),\n        label: buffer,\n        link: opener(link),\n        listItem: opener(listItem),\n        listItemValue: onenterlistitemvalue,\n        listOrdered: opener(list, onenterlistordered),\n        listUnordered: opener(list),\n        paragraph: opener(paragraph),\n        reference: onenterreference,\n        referenceString: buffer,\n        resourceDestinationString: buffer,\n        resourceTitleString: buffer,\n        setextHeading: opener(heading),\n        strong: opener(strong),\n        thematicBreak: opener(thematicBreak)\n      },\n      exit: {\n        atxHeading: closer(),\n        atxHeadingSequence: onexitatxheadingsequence,\n        autolink: closer(),\n        autolinkEmail: onexitautolinkemail,\n        autolinkProtocol: onexitautolinkprotocol,\n        blockQuote: closer(),\n        characterEscapeValue: onexitdata,\n        characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n        characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n        characterReferenceValue: onexitcharacterreferencevalue,\n        codeFenced: closer(onexitcodefenced),\n        codeFencedFence: onexitcodefencedfence,\n        codeFencedFenceInfo: onexitcodefencedfenceinfo,\n        codeFencedFenceMeta: onexitcodefencedfencemeta,\n        codeFlowValue: onexitdata,\n        codeIndented: closer(onexitcodeindented),\n        codeText: closer(onexitcodetext),\n        codeTextData: onexitdata,\n        data: onexitdata,\n        definition: closer(),\n        definitionDestinationString: onexitdefinitiondestinationstring,\n        definitionLabelString: onexitdefinitionlabelstring,\n        definitionTitleString: onexitdefinitiontitlestring,\n        emphasis: closer(),\n        hardBreakEscape: closer(onexithardbreak),\n        hardBreakTrailing: closer(onexithardbreak),\n        htmlFlow: closer(onexithtmlflow),\n        htmlFlowData: onexitdata,\n        htmlText: closer(onexithtmltext),\n        htmlTextData: onexitdata,\n        image: closer(onexitimage),\n        label: onexitlabel,\n        labelText: onexitlabeltext,\n        lineEnding: onexitlineending,\n        link: closer(onexitlink),\n        listItem: closer(),\n        listOrdered: closer(),\n        listUnordered: closer(),\n        paragraph: closer(),\n        referenceString: onexitreferencestring,\n        resourceDestinationString: onexitresourcedestinationstring,\n        resourceTitleString: onexitresourcetitlestring,\n        resource: onexitresource,\n        setextHeading: closer(onexitsetextheading),\n        setextHeadingLineSequence: onexitsetextheadinglinesequence,\n        setextHeadingText: onexitsetextheadingtext,\n        strong: closer(),\n        thematicBreak: closer()\n      }\n    },\n    options.mdastExtensions || []\n  )\n  /** @type {CompileData} */\n\n  const data = {}\n  return compile\n  /**\n   * @param {Array<Event>} events\n   * @returns {Root}\n   */\n\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {CompileContext['stack']} */\n\n    const stack = [tree]\n    /** @type {CompileContext['tokenStack']} */\n\n    const tokenStack = []\n    /** @type {Array<number>} */\n\n    const listStack = []\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n\n    const context = {\n      stack,\n      tokenStack,\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    let index = -1\n\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    if (tokenStack.length > 0) {\n      const tail = tokenStack[tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    } // Figure out `root` position.\n\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n    index = -1\n\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n\n    return tree\n  }\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token|undefined} */\n\n    let listItem\n    /** @type {number|undefined} */\n\n    let lineIndex\n    /** @type {number|undefined} */\n\n    let firstBlankLineIndex\n    /** @type {boolean|undefined} */\n\n    let atMarker\n\n    while (++index <= length) {\n      const event = events[index]\n\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            // @ts-expect-error Patched.\n            listItem._spread = true\n          } // Fix position.\n\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        } // Create a new list item.\n\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            // @ts-expect-error Patched\n            _spread: false,\n            start: Object.assign({}, event[1].start)\n          } // @ts-expect-error: `listItem` is most definitely defined, TS...\n\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    } // @ts-expect-error Patched.\n\n    events[start][1]._spread = listSpread\n    return length\n  }\n  /**\n   * @type {CompileContext['setData']}\n   * @param [value]\n   */\n\n  function setData(key, value) {\n    data[key] = value\n  }\n  /**\n   * @type {CompileContext['getData']}\n   * @template {string} K\n   * @param {K} key\n   * @returns {CompileData[K]}\n   */\n\n  function getData(key) {\n    return data[key]\n  }\n  /**\n   * @param {Point} d\n   * @returns {Point}\n   */\n\n  function point(d) {\n    return {\n      line: d.line,\n      column: d.column,\n      offset: d.offset\n    }\n  }\n  /**\n   * @param {(token: Token) => Node} create\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function opener(create, and) {\n    return open\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n  /** @type {CompileContext['buffer']} */\n\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n  /**\n   * @type {CompileContext['enter']}\n   * @template {Node} N\n   * @this {CompileContext}\n   * @param {N} node\n   * @param {Token} token\n   * @param {OnEnterError} [errorHandler]\n   * @returns {N}\n   */\n\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler]) // @ts-expect-error: `end` will be patched later.\n\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n  /**\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function closer(and) {\n    return close\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n  /**\n   * @type {CompileContext['exit']}\n   * @this {CompileContext}\n   * @param {Token} token\n   * @param {OnExitError} [onExitError]\n   * @returns {Node}\n   */\n\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n\n    node.position.end = point(token.end)\n    return node\n  }\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n\n  function resume() {\n    return toString(this.stack.pop())\n  } //\n  // Handlers.\n  //\n\n  /** @type {Handle} */\n\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n  /** @type {Handle} */\n\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor =\n        /** @type {List} */\n        this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      setData('expectingFirstListItemValue')\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n  /** @type {Handle} */\n\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n  /** @type {Handle} */\n\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitionlabelstring(token) {\n    // Discard label, use the source content instead.\n    const label = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitatxheadingsequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadinglinesequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n  /** @type {Handle} */\n\n  function onenterdata(token) {\n    const parent =\n      /** @type {Parent} */\n      this.stack[this.stack.length - 1]\n    /** @type {Node} */\n\n    let tail = parent.children[parent.children.length - 1]\n\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text() // @ts-expect-error: we’ll add `end` later.\n\n      tail.position = {\n        start: point(token.start)\n      } // @ts-expect-error: Assume `parent` accepts `text`.\n\n      parent.children.push(tail)\n    }\n\n    this.stack.push(tail)\n  }\n  /** @type {Handle} */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n  /** @type {Handle} */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n  /** @type {Handle} */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node =\n      /** @type {InlineCode} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitlink() {\n    const context =\n      /** @type {Link & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitimage() {\n    const context =\n      /** @type {Image & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitlabeltext(token) {\n    const ancestor =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 2]\n    const string = this.sliceSerialize(token)\n    ancestor.label = decodeString(string)\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitlabel() {\n    const fragment =\n      /** @type {Fragment} */\n      this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // Assume a reference.\n\n    setData('inReference', true)\n\n    if (node.type === 'link') {\n      // @ts-expect-error: Assume static phrasing content.\n      node.children = fragment.children\n    } else {\n      node.alt = value\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n  /** @type {Handle} */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n  /** @type {Handle} */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node =\n      /** @type {LinkReference|ImageReference} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n\n    let value\n\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      // @ts-expect-error `decodeNamedCharacterReference` can return false for\n      // invalid named character references, but everything we’ve tokenized is\n      // valid.\n      value = decodeNamedCharacterReference(data)\n    }\n\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  } //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n  /** @returns {Code} */\n\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n  /** @returns {InlineCode} */\n\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n  /** @returns {Definition} */\n\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n  /** @returns {Emphasis} */\n\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n  /** @returns {Heading} */\n\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n  /** @returns {Break} */\n\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n  /** @returns {HTML} */\n\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n  /** @returns {Image} */\n\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n  /** @returns {Link} */\n\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n  /** @returns {Paragraph} */\n\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n  /** @returns {Strong} */\n\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n  /** @returns {Text} */\n\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n  /** @returns {ThematicBreak} */\n\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n/**\n * @param {Extension} combined\n * @param {Array<Extension|Array<Extension>>} extensions\n * @returns {Extension}\n */\n\nfunction configure(combined, extensions) {\n  let index = -1\n\n  while (++index < extensions.length) {\n    const value = extensions[index]\n\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n\n  return combined\n}\n/**\n * @param {Extension} combined\n * @param {Extension} extension\n * @returns {void}\n */\n\nfunction extension(combined, extension) {\n  /** @type {string} */\n  let key\n\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      const list = key === 'canContainEols' || key === 'transforms'\n      const maybe = own.call(combined, key) ? combined[key] : undefined\n      /* c8 ignore next */\n\n      const left = maybe || (combined[key] = list ? [] : {})\n      const right = extension[key]\n\n      if (right) {\n        if (list) {\n          // @ts-expect-error: `left` is an array.\n          combined[key] = [...left, ...right]\n        } else {\n          Object.assign(left, right)\n        }\n      }\n    }\n  }\n}\n/** @type {OnEnterError} */\n\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\n\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Create} Create\n */\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n/**\n * @param {ParseOptions} [options]\n * @returns {ParseContext}\n */\n\nexport function parse(options = {}) {\n  /** @type {FullNormalizedExtension} */\n  // @ts-expect-error `defaultConstructs` is full, so the result will be too.\n  const constructs = combineExtensions(\n    // @ts-expect-error Same as above.\n    [defaultConstructs].concat(options.extensions || [])\n  )\n  /** @type {ParseContext} */\n\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n  /**\n   * @param {InitialConstruct} initial\n   */\n\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","import remarkParse from './lib/index.js'\n\nexport default remarkParse\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/** @type {import('unified').Plugin<[Options?] | void[], string, Root>} */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist').Literal} Literal\n * @typedef {Object.<string, unknown>} Props\n * @typedef {Array.<Node>|string} ChildrenOrValue\n *\n * @typedef {(<T extends string, P extends Record<string, unknown>, C extends Node[]>(type: T, props: P, children: C) => {type: T, children: C} & P)} BuildParentWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P, value: string) => {type: T, value: string} & P)} BuildLiteralWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P) => {type: T} & P)} BuildVoidWithProps\n * @typedef {(<T extends string, C extends Node[]>(type: T, children: C) => {type: T, children: C})} BuildParent\n * @typedef {(<T extends string>(type: T, value: string) => {type: T, value: string})} BuildLiteral\n * @typedef {(<T extends string>(type: T) => {type: T})} BuildVoid\n */\n\nexport var u = /**\n * @type {BuildVoid & BuildVoidWithProps & BuildLiteral & BuildLiteralWithProps & BuildParent & BuildParentWithProps}\n */ (\n  /**\n   * @param {string} type Type of node\n   * @param {Props|ChildrenOrValue} [props] Additional properties for node (or `children` or `value`)\n   * @param {ChildrenOrValue} [value] `children` or `value` of node\n   * @returns {Node}\n   */\n  function (type, props, value) {\n    /** @type {Node} */\n    var node = {type: String(type)}\n\n    if (\n      (value === undefined || value === null) &&\n      (typeof props === 'string' || Array.isArray(props))\n    ) {\n      value = props\n    } else {\n      Object.assign(node, props)\n    }\n\n    if (Array.isArray(value)) {\n      node.children = value\n    } else if (value !== undefined && value !== null) {\n      node.value = String(value)\n    }\n\n    return node\n  }\n)\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n *\n * @typedef {string} Type\n * @typedef {Object<string, unknown>} Props\n *\n * @typedef {null|undefined|Type|Props|TestFunctionAnything|Array.<Type|Props|TestFunctionAnything>} Test\n */\n\n/**\n * Check if a node passes a test\n *\n * @callback TestFunctionAnything\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean|void}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} X\n * @callback TestFunctionPredicate\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is X}\n */\n\n/**\n * @callback AssertAnything\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} Y\n * @callback AssertPredicate\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is Y}\n */\n\nexport const is =\n  /**\n   * Check if a node passes a test.\n   * When a `parent` node is known the `index` of node should also be given.\n   *\n   * @type {(\n   *   (<T extends Node>(node: unknown, test: T['type']|Partial<T>|TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|TestFunctionPredicate<T>>, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => node is T) &\n   *   ((node?: unknown, test?: Test, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * Check if a node passes a test.\n     * When a `parent` node is known the `index` of node should also be given.\n     *\n     * @param {unknown} [node] Node to check\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @param {number|null|undefined} [index] Position of `node` in `parent`\n     * @param {Parent|null|undefined} [parent] Parent of `node`\n     * @param {unknown} [context] Context object to invoke `test` with\n     * @returns {boolean} Whether test passed and `node` is a `Node` (object with `type` set to non-empty `string`).\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\nexport const convert =\n  /**\n   * @type {(\n   *   (<T extends Node>(test: T['type']|Partial<T>|TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * Generate an assertion from a check.\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n/**\n * @param {Array.<Type|Props|TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array.<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {unknown[]} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Utility to assert each property in `test` is represented in `node`, and each\n * values are strictly equal.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n *\n * @param {Type} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {Array.<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(...parameters) {\n    // @ts-expect-error: spreading is fine.\n    return Boolean(check.call(this, ...parameters))\n  }\n}\n\n// Utility to return true.\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('./complex-types.js').Action} Action\n * @typedef {import('./complex-types.js').Index} Index\n * @typedef {import('./complex-types.js').ActionTuple} ActionTuple\n * @typedef {import('./complex-types.js').VisitorResult} VisitorResult\n * @typedef {import('./complex-types.js').Visitor} Visitor\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal\n */\nexport const CONTINUE = true\n/**\n * Do not traverse this node’s children\n */\nexport const SKIP = 'skip'\n/**\n * Stop traversing immediately\n */\nexport const EXIT = false\n\n/**\n * Visit children of tree which pass test.\n *\n * @param tree\n *   Tree to walk\n * @param [test]\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Function called for nodes that pass `test`.\n * @param [reverse=false]\n *   Traverse in reverse preorder (NRL) instead of preorder (NLR) (default).\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types.js').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types.js').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types.js').Visitor<Node>} visitor\n     * @param {boolean} [reverse=false]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, null, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number?} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = typeof node === 'object' && node !== null ? node : {}\n        /** @type {string|undefined} */\n        let name\n\n        if (typeof value.type === 'string') {\n          name =\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' +\n              color(value.type + (name ? '<' + name + '>' : '')) +\n              ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * @param {VisitorResult} value\n * @returns {ActionTuple}\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n * @typedef {import('./complex-types.js').Visitor} Visitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit children of tree which pass test.\n *\n * @param tree\n *   Tree to walk\n * @param [test]\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Function called for nodes that pass `test`.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of preorder (NLR) (default).\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types.js').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types.js').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types.js').Visitor} visitor\n     * @param {boolean} [reverse]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {Record<string, unknown> & {type: string, position?: PositionLike|undefined}} NodeLike\n * @typedef {import('unist').Point} Point\n *\n * @typedef {Partial<Point>} PointLike\n *\n * @typedef PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n */\n\nexport const pointStart = point('start')\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike|Node} [node]\n * @returns {Position}\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start'|'end'} type\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the positional info of `node`.\n   *\n   * @param {NodeLike|Node} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    return {\n      line: point.line || null,\n      column: point.column || null,\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n * @typedef {import('mdast').Definition} Definition\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `node`.\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} node\n */\nexport function definitions(node) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!node || !node.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(node, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /**\n   * Get a node from the bound definition cache.\n   *\n   * @param {string} identifier\n   * @returns {Definition|null}\n   */\n  function definition(identifier) {\n    const id = clean(identifier)\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('./index.js').H} H\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Transform an unknown node.\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction unknown(h, node) {\n  const data = node.data || {}\n\n  if (\n    'value' in node &&\n    !(\n      own.call(data, 'hName') ||\n      own.call(data, 'hProperties') ||\n      own.call(data, 'hChildren')\n    )\n  ) {\n    return h.augment(node, u('text', node.value))\n  }\n\n  return h(node, 'div', all(h, node))\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nexport function one(h, node, parent) {\n  const type = node && node.type\n  /** @type {Handler} */\n  let fn\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(h.handlers, type)) {\n    fn = h.handlers[type]\n  } else if (h.passThrough && h.passThrough.includes(type)) {\n    fn = returnNode\n  } else {\n    fn = h.unknownHandler\n  }\n\n  return (typeof fn === 'function' ? fn : unknown)(h, node, parent)\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction returnNode(h, node) {\n  // @ts-expect-error: Pass through custom node.\n  return 'children' in node ? {...node, children: all(h, node)} : node\n}\n\n/**\n * @param {H} h\n * @param {MdastNode} parent\n */\nexport function all(h, parent) {\n  /** @type {Array<Content>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n\n    while (++index < nodes.length) {\n      const result = one(h, nodes[index], parent)\n\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri` below).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * Then, a regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`,\n * or `/^https?$/i` for `img[src]`.\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string|undefined} url\n * @param {RegExp} [protocol]\n * @returns {string}\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n\n  if (!protocol) {\n    return value\n  }\n\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 || // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) || // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n/**\n * Normalize a URL (such as used in definitions).\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n\n    let replace = '' // A correct percent encoded value.\n\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    } // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    } // Astral.\n    else if (code > 55295 && code < 57344) {\n      const next = value.charCodeAt(index + 1) // A correct surrogate pair.\n\n      if (code < 56320 && next > 56319 && next < 57344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      } // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    } // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Wrap `nodes` with line feeds between each entry.\n * Optionally adds line feeds at the start and end.\n *\n * @param {Array<Content>} nodes\n * @param {boolean} [loose=false]\n * @returns {Array<Content>}\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<Content>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push(u('text', '\\n'))\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push(u('text', '\\n'))\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push(u('text', '\\n'))\n  }\n\n  return result\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {FootnoteReference} node\n */\nexport function footnoteReference(h, node) {\n  const id = String(node.identifier)\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = h.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  if (index === -1) {\n    h.footnoteOrder.push(id)\n    h.footnoteCounts[id] = 1\n    counter = h.footnoteOrder.length\n  } else {\n    h.footnoteCounts[id]++\n    counter = index + 1\n  }\n\n  const reuseCounter = h.footnoteCounts[id]\n\n  return h(node, 'sup', [\n    h(\n      node.position,\n      'a',\n      {\n        href: '#' + h.clobberPrefix + 'fn-' + safeId,\n        id:\n          h.clobberPrefix +\n          'fnref-' +\n          safeId +\n          (reuseCounter > 1 ? '-' + reuseCounter : ''),\n        dataFootnoteRef: true,\n        ariaDescribedBy: 'footnote-label'\n      },\n      [u('text', String(counter))]\n    )\n  ])\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @type {Handler}\n * @param {ImageReference|LinkReference} node\n * @returns {Content|Array<Content>}\n */\nexport function revert(h, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return u('text', '![' + node.alt + suffix)\n  }\n\n  const contents = all(h, node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift(u('text', '['))\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push(u('text', suffix))\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {ListItem} node\n * @param {List} parent\n */\nexport function listItem(h, node, parent) {\n  const result = all(h, node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const props = {}\n  /** @type {Array<Content>} */\n  const wrapped = []\n\n  if (typeof node.checked === 'boolean') {\n    /** @type {Element} */\n    let paragraph\n\n    if (\n      result[0] &&\n      result[0].type === 'element' &&\n      result[0].tagName === 'p'\n    ) {\n      paragraph = result[0]\n    } else {\n      paragraph = h(null, 'p', [])\n      result.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift(u('text', ' '))\n    }\n\n    paragraph.children.unshift(\n      h(null, 'input', {\n        type: 'checkbox',\n        checked: node.checked,\n        disabled: true\n      })\n    )\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    props.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < result.length) {\n    const child = result[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      wrapped.push(u('text', '\\n'))\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      wrapped.push(...child.children)\n    } else {\n      wrapped.push(child)\n    }\n  }\n\n  const tail = result[result.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || !('tagName' in tail) || tail.tagName !== 'p')) {\n    wrapped.push(u('text', '\\n'))\n  }\n\n  return h(node, 'li', props, wrapped)\n}\n\n/**\n * @param {List} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = node.spread\n  const children = node.children\n  let index = -1\n\n  while (!loose && ++index < children.length) {\n    loose = listItemLoose(children[index])\n  }\n\n  return Boolean(loose)\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return null\n}\n","/**\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Blockquote} node\n */\nexport function blockquote(h, node) {\n  return h(node, 'blockquote', wrap(all(h, node), true))\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Break} node\n * @returns {Array<Element|Text>}\n */\nexport function hardBreak(h, node) {\n  return [h(node, 'br'), u('text', '\\n')]\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Code} node\n */\nexport function code(h, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang && node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/)\n  /** @type {Properties} */\n  const props = {}\n\n  if (lang) {\n    props.className = ['language-' + lang]\n  }\n\n  const code = h(node, 'code', props, [u('text', value)])\n\n  if (node.meta) {\n    code.data = {meta: node.meta}\n  }\n\n  return h(node.position, 'pre', [code])\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Delete} node\n */\nexport function strikethrough(h, node) {\n  return h(node, 'del', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Emphasis} node\n */\nexport function emphasis(h, node) {\n  return h(node, 'em', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../index.js').Handler} Handler\n *\n * @todo\n *   `footnote` (or “inline note”) are a pandoc footnotes feature (`^[a note]`)\n *   that does not exist in GFM.\n *   We still have support for it, so that things remain working with\n *   `micromark-extension-footnote` and `mdast-util-footnote`, but in the future\n *   we might be able to remove it?\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n/**\n * @type {Handler}\n * @param {Footnote} node\n */\nexport function footnote(h, node) {\n  const footnoteById = h.footnoteById\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(h, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Heading} node\n */\nexport function heading(h, node) {\n  return h(node, 'h' + node.depth, all(h, node))\n}\n","/**\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Return either a `raw` node in dangerous mode, otherwise nothing.\n *\n * @type {Handler}\n * @param {HTML} node\n */\nexport function html(h, node) {\n  return h.dangerous ? h.augment(node, u('raw', node.value)) : null\n}\n","/**\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * @type {Handler}\n * @param {ImageReference} node\n */\nexport function imageReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {src: normalizeUri(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * @type {Handler}\n * @param {Image} node\n */\nexport function image(h, node) {\n  /** @type {Properties} */\n  const props = {src: normalizeUri(node.url), alt: node.alt}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {InlineCode} node\n */\nexport function inlineCode(h, node) {\n  return h(node, 'code', [u('text', node.value.replace(/\\r?\\n|\\r/g, ' '))])\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {LinkReference} node\n */\nexport function linkReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {href: normalizeUri(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Link} node\n */\nexport function link(h, node) {\n  /** @type {Properties} */\n  const props = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {List} node\n * @returns {Element}\n */\nexport function list(h, node) {\n  /** @type {Properties} */\n  const props = {}\n  const name = node.ordered ? 'ol' : 'ul'\n  const items = all(h, node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    props.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < items.length) {\n    const item = items[index]\n\n    if (\n      item.type === 'element' &&\n      item.tagName === 'li' &&\n      item.properties &&\n      Array.isArray(item.properties.className) &&\n      item.properties.className.includes('task-list-item')\n    ) {\n      props.className = ['contains-task-list']\n      break\n    }\n  }\n\n  return h(node, name, props, wrap(items, true))\n}\n","/**\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Paragraph} node\n */\nexport function paragraph(h, node) {\n  return h(node, 'p', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\nimport {wrap} from '../wrap.js'\n\n/**\n * @type {Handler}\n * @param {Root} node\n */\nexport function root(h, node) {\n  // @ts-expect-error `root`s are also fine.\n  return h.augment(node, u('root', wrap(all(h, node))))\n}\n","/**\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Strong} node\n */\nexport function strong(h, node) {\n  return h(node, 'strong', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Table} Table\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Table} node\n */\nexport function table(h, node) {\n  const rows = node.children\n  let index = -1\n  const align = node.align || []\n  /** @type {Array<Element>} */\n  const result = []\n\n  while (++index < rows.length) {\n    const row = rows[index].children\n    const name = index === 0 ? 'th' : 'td'\n    /** @type {Array<Content>} */\n    const out = []\n    let cellIndex = -1\n    const length = node.align ? align.length : row.length\n\n    while (++cellIndex < length) {\n      const cell = row[cellIndex]\n      out.push(\n        h(cell, name, {align: align[cellIndex]}, cell ? all(h, cell) : [])\n      )\n    }\n\n    result[index] = h(rows[index], 'tr', wrap(out, true))\n  }\n\n  return h(\n    node,\n    'table',\n    wrap(\n      [h(result[0].position, 'thead', wrap([result[0]], true))].concat(\n        result[1]\n          ? h(\n              {\n                start: pointStart(result[1]),\n                end: pointEnd(result[result.length - 1])\n              },\n              'tbody',\n              wrap(result.slice(1), true)\n            )\n          : []\n      ),\n      true\n    )\n  )\n}\n","/**\n * @typedef {import('mdast').Text} Text\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {trimLines} from 'trim-lines'\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Text} node\n */\nexport function text(h, node) {\n  return h.augment(node, u('text', trimLines(String(node.value))))\n}\n","/**\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n */\n\n/**\n * @type {Handler}\n * @param {ThematicBreak} [node]\n * @returns {Element}\n */\nexport function thematicBreak(h, node) {\n  return h(node, 'hr')\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('hast').Root|import('hast').Parent['children'][number]} HastNode\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} Content\n * @typedef {import('unist-util-position').PositionLike} PositionLike\n *\n * @typedef EmbeddedHastFields\n * @property {string} [hName]\n *   Defines the tag name of an element.\n * @property {Properties} [hProperties]\n *   Defines the properties of an element.\n * @property {Array<Content>} [hChildren]\n *   Defines the (hast) children of an element.\n *\n * @typedef {Record<string, unknown> & EmbeddedHastFields} Data\n *   unist data with embedded hast fields.\n *\n * @typedef {MdastNode & {data?: Data}} NodeWithData\n *   unist node with embedded hast data.\n *\n * @callback Handler\n *   Handle a node.\n * @param {H} h\n *   Handle context.\n * @param {any} node\n *   mdast node to handle.\n * @param {Parent|null} parent\n *   Parent of `node`.\n * @returns {Content|Array<Content>|null|undefined}\n *   hast node.\n *\n * @callback HFunctionProps\n * @param {MdastNode|PositionLike|null|undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Properties} props\n *   Properties.\n * @param {Array<Content>?} [children]\n *   hast content.\n * @returns {Element}\n *   Compiled element.\n *\n * @callback HFunctionNoProps\n * @param {MdastNode|PositionLike|null|undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Array<Content>?} [children]\n *   hast content\n * @returns {Element}\n *   Compiled element.\n *\n * @typedef HFields\n * @property {boolean} dangerous\n *   Whether HTML is allowed.\n * @property {string} clobberPrefix\n *   Prefix to use to prevent DOM clobbering.\n * @property {string} footnoteLabel\n *   Label to use to introduce the footnote section.\n * @property {string} footnoteLabelTagName\n *   HTML used for the footnote label.\n * @property {Properties} footnoteLabelProperties\n *   Properties on the HTML tag used for the footnote label.\n * @property {string} footnoteBackLabel\n *   Label to use to go back to a footnote call from the footnote section.\n * @property {(identifier: string) => Definition|null} definition\n *   Definition cache.\n * @property {Record<string, FootnoteDefinition>} footnoteById\n *   Footnote cache.\n * @property {Array<string>} footnoteOrder\n *   Order in which footnotes occur.\n * @property {Record<string, number>} footnoteCounts\n *   Counts the same footnote was used.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {Handler} unknownHandler\n *   Handler for any none not in `passThrough` or otherwise handled.\n * @property {(left: NodeWithData|PositionLike|null|undefined, right: Content) => Content} augment\n *   Like `h` but lower-level and usable on non-elements.\n * @property {Array<string>} passThrough\n *   List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean} [allowDangerousHtml=false]\n *   Whether to allow `html` nodes and inject them as `raw` HTML.\n * @property {string} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` attribute to prevent it from *clobbering*.\n *   attributes.\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=x></p>\n *   <script>alert(x)</script>\n *   ```\n *\n *   Elements by their ID are made available in browsers on the `window` object.\n *   Using a prefix prevents this from being a problem.\n * @property {string} [footnoteLabel='Footnotes']\n *   Label to use for the footnotes section.\n *   Affects screen reader users.\n *   Change it if you’re authoring in a different language.\n * @property {string} [footnoteLabelTagName='h2']\n *   HTML tag to use for the footnote label.\n *   Can be changed to match your document structure and play well with your choice of css.\n * @property {Properties} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label.\n *   A 'sr-only' class is added by default to hide this from sighted users.\n *   Change it to make the label visible, or add classes for other purposes.\n * @property {string} [footnoteBackLabel='Back to content']\n *   Label to use from backreferences back to their footnote call.\n *   Affects screen reader users.\n *   Change it if you’re authoring in a different language.\n * @property {Handlers} [handlers]\n *   Object mapping mdast nodes to functions handling them\n * @property {Array<string>} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast\n * @property {Handler} [unknownHandler]\n *   Handler for all unknown nodes.\n *\n * @typedef {Record<string, Handler>} Handlers\n *   Map of node types to handlers\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} H\n *   Handle context\n */\n\nimport {u} from 'unist-builder'\nimport {visit} from 'unist-util-visit'\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {one} from './traverse.js'\nimport {footer} from './footer.js'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Turn mdast into hast.\n *\n * @param {MdastNode} tree\n *   mdast node.\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {H}\n *   `h` function.\n */\nfunction factory(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Record<string, FootnoteDefinition>} */\n  const footnoteById = {}\n\n  h.dangerous = dangerous\n  h.clobberPrefix =\n    settings.clobberPrefix === undefined || settings.clobberPrefix === null\n      ? 'user-content-'\n      : settings.clobberPrefix\n  h.footnoteLabel = settings.footnoteLabel || 'Footnotes'\n  h.footnoteLabelTagName = settings.footnoteLabelTagName || 'h2'\n  h.footnoteLabelProperties = settings.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  h.footnoteBackLabel = settings.footnoteBackLabel || 'Back to content'\n  h.definition = definitions(tree)\n  h.footnoteById = footnoteById\n  /** @type {Array<string>} */\n  h.footnoteOrder = []\n  /** @type {Record<string, number>} */\n  h.footnoteCounts = {}\n  h.augment = augment\n  h.handlers = {...handlers, ...settings.handlers}\n  h.unknownHandler = settings.unknownHandler\n  h.passThrough = settings.passThrough\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it’s fine!\n  return h\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   *\n   * @param {(NodeWithData|PositionLike)?} left\n   * @param {Content} right\n   * @returns {Content}\n   */\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {Data} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        // @ts-expect-error: fine.\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  function h(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n}\n\n/**\n * Transform `tree` (an mdast node) to a hast node.\n *\n * @param {MdastNode} tree mdast node\n * @param {Options} [options] Configuration\n * @returns {HastNode|null|undefined} hast node\n */\nexport function toHast(tree, options) {\n  const h = factory(tree, options)\n  const node = one(h, tree, null)\n  const foot = footer(h)\n\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push(u('text', '\\n'), foot)\n  }\n\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n\nexport {handlers as defaultHandlers} from './handlers/index.js'\n","/**\n * @typedef {Object} PointLike\n * @property {number} [line]\n * @property {number} [column]\n * @property {number} [offset]\n *\n * @typedef {Object} PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n *\n * @typedef {Object} NodeLike\n * @property {PositionLike} [position]\n */\n\n/**\n * Check if `node` is *generated*.\n *\n * @param {NodeLike} [node]\n * @returns {boolean}\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('./index.js').H} H\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\nimport {wrap} from './wrap.js'\n\n/**\n * @param {H} h\n * @returns {Element|null}\n */\nexport function footer(h) {\n  let index = -1\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n\n  while (++index < h.footnoteOrder.length) {\n    const def = h.footnoteById[h.footnoteOrder[index].toUpperCase()]\n\n    if (!def) {\n      continue\n    }\n\n    const content = all(h, def)\n    const id = String(def.identifier)\n    const safeId = normalizeUri(id.toLowerCase())\n    let referenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n\n    while (++referenceIndex <= h.footnoteCounts[id]) {\n      /** @type {Element} */\n      const backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            h.clobberPrefix +\n            'fnref-' +\n            safeId +\n            (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: h.footnoteBackLabel\n        },\n        children: [{type: 'text', value: '↩'}]\n      }\n\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{type: 'text', value: String(referenceIndex)}]\n        })\n      }\n\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      backReferences.push(backReference)\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: h.clobberPrefix + 'fn-' + safeId},\n      children: wrap(content, true)\n    }\n\n    if (def.position) {\n      listItem.position = def.position\n    }\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return null\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: h.footnoteLabelTagName,\n        properties: {\n          ...JSON.parse(JSON.stringify(h.footnoteLabelProperties)),\n          id: 'footnote-label'\n        },\n        children: [u('text', h.footnoteLabel)]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\n\n/**\n * Plugin that turns markdown into HTML to support rehype.\n *\n * *   If a destination processor is given, that processor runs with a new HTML\n *     (hast) tree (bridge-mode).\n *     As the given processor runs with a hast tree, and rehype plugins support\n *     hast, that means rehype plugins can be used with the given processor.\n *     The hast tree is discarded in the end.\n *     It’s highly unlikely that you want to do this.\n * *   The common case is to not pass a destination processor, in which case the\n *     current processor continues running with a new HTML (hast) tree\n *     (mutate-mode).\n *     As the current processor continues with a hast tree, and rehype plugins\n *     support hast, that means rehype plugins can be used after\n *     `remark-rehype`.\n *     It’s likely that this is what you want to do.\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype =\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[null|undefined, Options?]|[Options]|[], MdastRoot>)} */\n  (\n    function (destination, options) {\n      return destination && 'run' in destination\n        ? bridge(destination, options)\n        : mutate(destination || options)\n    }\n  )\n\nexport default remarkRehype\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further plugins run on the hast tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned by `toHast`.\n  return (node) => toHast(node, options)\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","import {visit} from 'unist-util-visit'\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n *\n * @callback AllowElement\n * @param {Element} element\n * @param {number} index\n * @param {Element|Root} parent\n * @returns {boolean|undefined}\n *\n * @typedef Options\n * @property {Array<string>} [allowedElements]\n * @property {Array<string>} [disallowedElements=[]]\n * @property {AllowElement} [allowElement]\n * @property {boolean} [unwrapDisallowed=false]\n */\n\n/**\n * @type {import('unified').Plugin<[Options], Root>}\n */\nexport default function rehypeFilter(options) {\n  if (options.allowedElements && options.disallowedElements) {\n    throw new TypeError(\n      'Only one of `allowedElements` and `disallowedElements` should be defined'\n    )\n  }\n\n  if (\n    options.allowedElements ||\n    options.disallowedElements ||\n    options.allowElement\n  ) {\n    return (tree) => {\n      visit(tree, 'element', (node, index, parent_) => {\n        const parent = /** @type {Element|Root} */ (parent_)\n        /** @type {boolean|undefined} */\n        let remove\n\n        if (options.allowedElements) {\n          remove = !options.allowedElements.includes(node.tagName)\n        } else if (options.disallowedElements) {\n          remove = options.disallowedElements.includes(node.tagName)\n        }\n\n        if (!remove && options.allowElement && typeof index === 'number') {\n          remove = !options.allowElement(node, index, parent)\n        }\n\n        if (remove && typeof index === 'number') {\n          if (options.unwrapDisallowed && node.children) {\n            parent.children.splice(index, 1, ...node.children)\n          } else {\n            parent.children.splice(index, 1)\n          }\n\n          return index\n        }\n\n        return undefined\n      })\n    }\n  }\n}\n","const protocols = ['http', 'https', 'mailto', 'tel']\n\n/**\n * @param {string} uri\n * @returns {string}\n */\nexport function uriTransformer(uri) {\n  const url = (uri || '').trim()\n  const first = url.charAt(0)\n\n  if (first === '#' || first === '/') {\n    return url\n  }\n\n  const colon = url.indexOf(':')\n  if (colon === -1) {\n    return url\n  }\n\n  let index = -1\n\n  while (++index < protocols.length) {\n    const protocol = protocols[index]\n\n    if (\n      colon === protocol.length &&\n      url.slice(0, protocol.length).toLowerCase() === protocol\n    ) {\n      return url\n    }\n  }\n\n  index = url.indexOf('?')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  index = url.indexOf('#')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  // eslint-disable-next-line no-script-url\n  return 'javascript:void(0)'\n}\n","/**\n * @param {unknown} thing\n * @returns {boolean}\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  var value =\n    // @ts-ignore looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-ignore looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://html.spec.whatwg.org/#space-character>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","export const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","/**\n * @template T\n * @typedef {import('react').ComponentType<T>} ComponentType<T>\n */\n\n/**\n * @template T\n * @typedef {import('react').ComponentPropsWithoutRef<T>} ComponentPropsWithoutRef<T>\n */\n\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('./complex-types').ReactMarkdownProps} ReactMarkdownProps\n *\n * @typedef Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef Context\n * @property {Options} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @typedef {import('react').HTMLAttributeAnchorTarget} TransformLinkTargetType\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {TransformLinkTargetType|undefined}\n *\n * @typedef {keyof JSX.IntrinsicElements} ReactMarkdownNames\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef {ComponentPropsWithoutRef<'code'> & ReactMarkdownProps & {inline?: boolean}} CodeProps\n * @typedef {ComponentPropsWithoutRef<'h1'> & ReactMarkdownProps & {level: number}} HeadingProps\n * @typedef {ComponentPropsWithoutRef<'li'> & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} LiProps\n * @typedef {ComponentPropsWithoutRef<'ol'> & ReactMarkdownProps & {depth: number, ordered: true}} OrderedListProps\n * @typedef {ComponentPropsWithoutRef<'table'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: boolean}} TableCellProps\n * @typedef {ComponentPropsWithoutRef<'tr'> & ReactMarkdownProps & {isHeader: boolean}} TableRowProps\n * @typedef {ComponentPropsWithoutRef<'ul'> & ReactMarkdownProps & {depth: number, ordered: false}} UnorderedListProps\n *\n * @typedef {ComponentType<CodeProps>} CodeComponent\n * @typedef {ComponentType<HeadingProps>} HeadingComponent\n * @typedef {ComponentType<LiProps>} LiComponent\n * @typedef {ComponentType<OrderedListProps>} OrderedListComponent\n * @typedef {ComponentType<TableCellProps>} TableCellComponent\n * @typedef {ComponentType<TableRowProps>} TableRowComponent\n * @typedef {ComponentType<UnorderedListProps>} UnorderedListComponent\n *\n * @typedef SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableCellComponent|ReactMarkdownNames} td\n * @property {TableCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {Partial<Omit<import('./complex-types').NormalComponents, keyof SpecialComponents> & SpecialComponents>} Components\n *\n * @typedef Options\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {null|false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {TransformLinkTargetType|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nimport React from 'react'\nimport ReactIs from 'react-is'\nimport {whitespace} from 'hast-util-whitespace'\nimport {svg, find, hastToReact} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport style from 'style-to-object'\n\nconst own = {}.hasOwnProperty\n\n// The table-related elements that must not contain whitespace text according\n// to React.\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr'])\n\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\nexport function childrenToReact(context, node) {\n  /** @type {Array<ReactNode>} */\n  const children = []\n  let childIndex = -1\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n  let child\n\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex]\n\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node))\n    } else if (child.type === 'text') {\n      // Currently, a warning is triggered by react for *any* white space in\n      // tables.\n      // So we drop it.\n      // See: <https://github.com/facebook/react/pull/7081>.\n      // See: <https://github.com/facebook/react/pull/7515>.\n      // See: <https://github.com/remarkjs/remark-react/issues/64>.\n      // See: <https://github.com/remarkjs/react-markdown/issues/576>.\n      if (\n        node.type !== 'element' ||\n        !tableElements.has(node.tagName) ||\n        !whitespace(child)\n      ) {\n        children.push(child.value)\n      }\n    } else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      children.push(child.value)\n    }\n  }\n\n  return children\n}\n\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\nfunction toReact(context, node, index, parent) {\n  const options = context.options\n  const parentSchema = context.schema\n  /** @type {ReactMarkdownNames} */\n  // @ts-expect-error assume a known HTML/SVG element.\n  const name = node.tagName\n  /** @type {Record<string, unknown>} */\n  const properties = {}\n  let schema = parentSchema\n  /** @type {string} */\n  let property\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg\n    context.schema = schema\n  }\n\n  if (node.properties) {\n    for (property in node.properties) {\n      if (own.call(node.properties, property)) {\n        addProperty(properties, property, node.properties[property], context)\n      }\n    }\n  }\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++\n  }\n\n  const children = childrenToReact(context, node)\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--\n  }\n\n  // Restore parent schema.\n  context.schema = parentSchema\n\n  // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the position interface.\n  const position = node.position || {\n    start: {line: null, column: null, offset: null},\n    end: {line: null, column: null, offset: null}\n  }\n  const component =\n    options.components && own.call(options.components, name)\n      ? options.components[name]\n      : name\n  const basic = typeof component === 'string' || component === React.Fragment\n\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(\n      `Component for name \\`${name}\\` not defined or is not renderable`\n    )\n  }\n\n  properties.key = [\n    name,\n    position.start.line,\n    position.start.column,\n    index\n  ].join('-')\n\n  if (name === 'a' && options.linkTarget) {\n    properties.target =\n      typeof options.linkTarget === 'function'\n        ? options.linkTarget(\n            String(properties.href || ''),\n            node.children,\n            typeof properties.title === 'string' ? properties.title : null\n          )\n        : options.linkTarget\n  }\n\n  if (name === 'a' && options.transformLinkUri) {\n    properties.href = options.transformLinkUri(\n      String(properties.href || ''),\n      node.children,\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (\n    !basic &&\n    name === 'code' &&\n    parent.type === 'element' &&\n    parent.tagName !== 'pre'\n  ) {\n    properties.inline = true\n  }\n\n  if (\n    !basic &&\n    (name === 'h1' ||\n      name === 'h2' ||\n      name === 'h3' ||\n      name === 'h4' ||\n      name === 'h5' ||\n      name === 'h6')\n  ) {\n    properties.level = Number.parseInt(name.charAt(1), 10)\n  }\n\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri(\n      String(properties.src || ''),\n      String(properties.alt || ''),\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (!basic && name === 'li' && parent.type === 'element') {\n    const input = getInputElement(node)\n    properties.checked =\n      input && input.properties ? Boolean(input.properties.checked) : null\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.ordered = parent.tagName === 'ol'\n  }\n\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol'\n    properties.depth = context.listDepth\n  }\n\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {}\n      // @ts-expect-error assume `style` is an object\n      properties.style.textAlign = properties.align\n      delete properties.align\n    }\n\n    if (!basic) {\n      properties.isHeader = name === 'th'\n    }\n  }\n\n  if (!basic && name === 'tr' && parent.type === 'element') {\n    properties.isHeader = Boolean(parent.tagName === 'thead')\n  }\n\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position)\n  }\n\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position\n  }\n\n  // If `includeElementIndex` is given, pass node index info to components.\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.siblingCount = getElementsBeforeCount(parent)\n  }\n\n  if (!basic) {\n    properties.node = node\n  }\n\n  // Ensure no React warnings are emitted for void elements w/ children.\n  return children.length > 0\n    ? React.createElement(component, properties, children)\n    : React.createElement(component, properties)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\nfunction getInputElement(node) {\n  let index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child\n    }\n  }\n\n  return null\n}\n\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1\n  let count = 0\n\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break\n    if (parent.children[index].type === 'element') count++\n  }\n\n  return count\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\nfunction addProperty(props, prop, value, ctx) {\n  const info = find(ctx.schema, prop)\n  let result = value\n\n  // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n  if (result === null || result === undefined || result !== result) {\n    return\n  }\n\n  // Accept `array`.\n  // Most props are space-separated.\n  if (Array.isArray(result)) {\n    result = info.commaSeparated ? commas(result) : spaces(result)\n  }\n\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result)\n  }\n\n  if (info.space && info.property) {\n    props[\n      own.call(hastToReact, info.property)\n        ? hastToReact[info.property]\n        : info.property\n    ] = result\n  } else if (info.attribute) {\n    props[info.attribute] = result\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Record<string, string>}\n */\nfunction parseStyle(value) {\n  /** @type {Record<string, string>} */\n  const result = {}\n\n  try {\n    style(value, iterator)\n  } catch {\n    // Silent.\n  }\n\n  return result\n\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? `ms-${name.slice(4)}` : name\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v\n  }\n}\n\n/**\n * @param {unknown} _\n * @param {string} $1\n */\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * @param {Position|{start: {line: null, column: null, offset: null}, end: {line: null, column: null, offset: null}}} pos\n * @returns {string}\n */\nfunction flattenPosition(pos) {\n  return [\n    pos.start.line,\n    ':',\n    pos.start.column,\n    '-',\n    pos.end.line,\n    ':',\n    pos.end.column\n  ]\n    .map((d) => String(d))\n    .join('')\n}\n","/**\n * @typedef {Object} StringifyOptions\n * @property {boolean} [padLeft=true] Whether to pad a space before a token (`boolean`, default: `true`).\n * @property {boolean} [padRight=false] Whether to pad a space after a token (`boolean`, default: `false`).\n */\n\n/**\n * Parse comma separated tokens to an array.\n *\n * @param {string} value\n * @returns {Array.<string>}\n */\nexport function parse(value) {\n  /** @type {Array.<string>} */\n  var tokens = []\n  var input = String(value || '')\n  var index = input.indexOf(',')\n  var start = 0\n  /** @type {boolean} */\n  var end\n  /** @type {string} */\n  var token\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings to comma separated tokens.\n *\n * @param {Array.<string|number>} values\n * @param {StringifyOptions} [options]\n * @returns {string}\n */\nexport function stringify(values, options) {\n  var settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  if (values[values.length - 1] === '') {\n    values = values.concat('')\n  }\n\n  return values\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * Parse space separated tokens to an array of strings.\n *\n * @param {string} value Space separated tokens\n * @returns {Array.<string>} Tokens\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated tokens.\n *\n * @param {Array.<string|number>} values Tokens\n * @returns {string} Space separated tokens\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('react').ReactElement<{}>} ReactElement\n * @typedef {import('unified').PluggableList} PluggableList\n * @typedef {import('hast').Root} Root\n * @typedef {import('./rehype-filter.js').Options} FilterOptions\n * @typedef {import('./ast-to-react.js').Options} TransformOptions\n *\n * @typedef CoreOptions\n * @property {string} children\n *\n * @typedef PluginOptions\n * @property {PluggableList} [remarkPlugins=[]]\n * @property {PluggableList} [rehypePlugins=[]]\n * @property {import('remark-rehype').Options | undefined} [remarkRehypeOptions={}]\n *\n * @typedef LayoutOptions\n * @property {string} [className]\n *\n * @typedef {CoreOptions & PluginOptions & LayoutOptions & FilterOptions & TransformOptions} ReactMarkdownOptions\n *\n * @typedef Deprecation\n * @property {string} id\n * @property {string} [to]\n */\n\nimport React from 'react'\nimport {VFile} from 'vfile'\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport PropTypes from 'prop-types'\nimport {html} from 'property-information'\nimport rehypeFilter from './rehype-filter.js'\nimport {uriTransformer} from './uri-transformer.js'\nimport {childrenToReact} from './ast-to-react.js'\n\nconst own = {}.hasOwnProperty\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {Record<string, Deprecation>} */\nconst deprecated = {\n  plugins: {to: 'plugins', id: 'change-plugins-to-remarkplugins'},\n  renderers: {to: 'components', id: 'change-renderers-to-components'},\n  astPlugins: {id: 'remove-buggy-html-in-markdown-parser'},\n  allowDangerousHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  escapeHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  source: {to: 'children', id: 'change-source-to-children'},\n  allowNode: {\n    to: 'allowElement',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  allowedTypes: {\n    to: 'allowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  disallowedTypes: {\n    to: 'disallowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  includeNodeIndex: {\n    to: 'includeElementIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  }\n}\n\n/**\n * React component to render markdown.\n *\n * @param {ReactMarkdownOptions} options\n * @returns {ReactElement}\n */\nexport function ReactMarkdown(options) {\n  for (const key in deprecated) {\n    if (own.call(deprecated, key) && own.call(options, key)) {\n      const deprecation = deprecated[key]\n      console.warn(\n        `[react-markdown] Warning: please ${\n          deprecation.to ? `use \\`${deprecation.to}\\` instead of` : 'remove'\n        } \\`${key}\\` (see <${changelog}#${deprecation.id}> for more info)`\n      )\n      delete deprecated[key]\n    }\n  }\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(options.remarkPlugins || [])\n    .use(remarkRehype, {\n      ...options.remarkRehypeOptions,\n      allowDangerousHtml: true\n    })\n    .use(options.rehypePlugins || [])\n    .use(rehypeFilter, options)\n\n  const file = new VFile()\n\n  if (typeof options.children === 'string') {\n    file.value = options.children\n  } else if (options.children !== undefined && options.children !== null) {\n    console.warn(\n      `[react-markdown] Warning: please pass a string as \\`children\\` (not: \\`${options.children}\\`)`\n    )\n  }\n\n  const hastNode = processor.runSync(processor.parse(file), file)\n\n  if (hastNode.type !== 'root') {\n    throw new TypeError('Expected a `root` node')\n  }\n\n  /** @type {ReactElement} */\n  let result = React.createElement(\n    React.Fragment,\n    {},\n    childrenToReact({options, schema: html, listDepth: 0}, hastNode)\n  )\n\n  if (options.className) {\n    result = React.createElement('div', {className: options.className}, result)\n  }\n\n  return result\n}\n\nReactMarkdown.defaultProps = {transformLinkUri: uriTransformer}\n\nReactMarkdown.propTypes = {\n  // Core options:\n  children: PropTypes.string,\n  // Layout options:\n  className: PropTypes.string,\n  // Filter options:\n  allowElement: PropTypes.func,\n  allowedElements: PropTypes.arrayOf(PropTypes.string),\n  disallowedElements: PropTypes.arrayOf(PropTypes.string),\n  unwrapDisallowed: PropTypes.bool,\n  // Plugin options:\n  remarkPlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  rehypePlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  // Transform options:\n  sourcePos: PropTypes.bool,\n  rawSourcePos: PropTypes.bool,\n  skipHtml: PropTypes.bool,\n  includeElementIndex: PropTypes.bool,\n  transformLinkUri: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  linkTarget: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  transformImageUri: PropTypes.func,\n  components: PropTypes.object\n}\n"],"names":["_interopRequireDefault","require","exports","obj","nodeInterop","__esModule","default","cache","_getRequireWildcardCache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireWildcard","_createSvgIcon","_jsxRuntime","WeakMap","cacheBabelInterop","cacheNodeInterop","_default","jsx","d","requiredArgs","required","args","length","TypeError","_typeof","Symbol","iterator","constructor","isDate","value","arguments","Date","toString","toDate","argument","argStr","getTime","console","warn","Error","stack","NaN","isValid","dirtyDate","date","isNaN","Number","toInteger","dirtyNumber","number","Math","ceil","floor","addMilliseconds","dirtyAmount","timestamp","amount","subMilliseconds","MILLISECONDS_IN_DAY","startOfUTCISOWeek","weekStartsOn","day","getUTCDay","diff","setUTCDate","getUTCDate","setUTCHours","getUTCISOWeekYear","year","getUTCFullYear","fourthOfJanuaryOfNextYear","setUTCFullYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","startOfUTCISOWeekYear","fourthOfJanuary","MILLISECONDS_IN_WEEK","defaultOptions","getDefaultOptions","startOfUTCWeek","options","_ref","_ref2","_ref3","_options$weekStartsOn","_options$locale","_options$locale$optio","_defaultOptions$local","_defaultOptions$local2","locale","RangeError","getUTCWeekYear","_options$firstWeekCon","firstWeekContainsDate","firstWeekOfNextYear","firstWeekOfThisYear","startOfUTCWeekYear","firstWeek","addLeadingZeros","targetLength","sign","output","abs","y","token","signedYear","M","month","getUTCMonth","String","a","dayPeriodEnumValue","getUTCHours","toUpperCase","h","H","m","getUTCMinutes","s","getUTCSeconds","S","numberOfDigits","milliseconds","getUTCMilliseconds","pow","dayPeriodEnum","formatters","G","localize","era","width","ordinalNumber","unit","lightFormatters","Y","signedWeekYear","weekYear","R","u","Q","quarter","context","q","L","w","week","round","getUTCWeek","I","isoWeek","getUTCISOWeek","D","dayOfYear","setUTCMonth","startOfYearTimestamp","difference","getUTCDayOfYear","E","dayOfWeek","e","localDayOfWeek","c","i","isoDayOfWeek","dayPeriod","toLowerCase","b","hours","B","K","k","X","_localize","timezoneOffset","_originalDate","getTimezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","x","O","formatTimezoneShort","z","t","originalDate","T","offset","dirtyDelimiter","absOffset","minutes","delimiter","dateLongFormatter","pattern","formatLong","timeLongFormatter","time","longFormatters","p","P","dateTimeFormat","matchResult","match","datePattern","timePattern","dateTime","replace","getTimezoneOffsetInMilliseconds","utcDate","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","protectedDayOfYearTokens","protectedWeekYearTokens","isProtectedDayOfYearToken","indexOf","isProtectedWeekYearToken","throwProtectedError","format","input","concat","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","count","result","tokenValue","addSuffix","comparison","buildFormatLongFn","undefined","defaultWidth","formats","full","long","medium","short","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","_date","_baseDate","_options","buildLocalizeFn","dirtyIndex","valuesArray","formattingValues","defaultFormattingWidth","_defaultWidth","_width","values","argumentCallback","rem100","narrow","abbreviated","wide","am","pm","midnight","noon","morning","afternoon","evening","night","buildMatchFn","string","matchPattern","matchPatterns","defaultMatchWidth","matchedString","parsePatterns","defaultParseWidth","Array","isArray","findIndex","test","findKey","valueCallback","rest","slice","object","predicate","array","parsePattern","parseInt","parseResult","any","index","code","formatDistance","formatRelative","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","dirtyFormatStr","_ref4","_options$locale2","_options$locale2$opti","_ref5","_ref6","_ref7","_options$locale3","_options$locale3$opti","_defaultOptions$local3","_defaultOptions$local4","formatStr","defaultLocale","formatterOptions","map","substring","firstCharacter","longFormatter","join","cleanEscapedString","formatter","useAdditionalWeekYearTokens","useAdditionalDayOfYearTokens","matched","hasOwn","toStr","gOPD","arr","isPlainObject","hasOwnConstructor","hasIsPrototypeOf","setProperty","target","name","enumerable","configurable","newValue","writable","getProperty","module","extend","src","copy","copyIsArray","clone","deep","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","trim","str","style","lineno","column","updatePosition","lines","lastIndexOf","position","start","line","node","Position","whitespace","this","end","source","content","errorsList","error","msg","err","reason","filename","silent","push","re","exec","comments","rules","comment","pos","charAt","type","declaration","prop","val","ret","property","decl","decls","declarations","isBuffer","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","props","propName","componentName","location","propFullName","secret","getShim","isRequired","ReactPropTypes","bigint","bool","func","symbol","arrayOf","element","elementType","instanceOf","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","parse","hasIterator","len","_toArray","stringifyPosition","point","VFileMessage","place","origin","parts","message","fatal","ruleId","actual","expected","file","url","note","path","basename","ext","assertPath","seenNonSlash","charCodeAt","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","joined","segments","normalize","sep","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","normalizeString","JSON","stringify","proc","cwd","isUrl","fileURLOrPath","href","urlToPath","URL","protocol","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","order","VFile","buffer","data","messages","history","stored","includes","assertNonEmpty","assertPart","stem","encoding","part","bail","getPrototypeOf","toStringTag","wrap","middleware","callback","called","parameters","fnExpectsCallback","done","apply","exception","Promise","then","unified","base","frozen","transformers","fns","pipeline","run","middlewareIndex","pop","next","fn","use","middelware","trough","attachers","namespace","freezeIndex","processor","assertUnfrozen","own","Parser","Compiler","freeze","attacher","transformer","POSITIVE_INFINITY","settings","addPlugin","addList","addPreset","assign","add","plugin","plugins","entry","isPlainObj","doc","vfile","assertParser","newable","assertCompiler","assertNode","compile","executor","resolve","reject","tree","runSync","complete","assertDone","process","processSync","destination","keys","asyncName","Boolean","looksLikeAVFile","includeImageAlt","alt","all","children","splice","list","remove","items","chunkStart","from","unshift","combineExtensions","extensions","syntaxExtension","extension","hook","left","right","constructs","existing","before","asciiAlpha","regexCheck","asciiDigit","asciiHexDigit","asciiAlphanumeric","asciiPunctuation","asciiAtext","asciiControl","markdownLineEndingOrSpace","markdownLineEnding","markdownSpace","unicodeWhitespace","unicodePunctuation","regex","fromCharCode","factorySpace","effects","ok","max","limit","size","enter","prefix","consume","exit","tokenize","previous","contentStart","attempt","parser","contentInitial","lineStart","contentType","document","childFlow","childToken","lineStartOffset","self","continued","item","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","events","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","check","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","containerContinue","flow","_tokenizer","flowContinue","writeToChild","eof","stream","sliceStream","defineSkip","write","seen","nok","disable","null","blankLine","partial","subtokenize","event","lineIndex","otherIndex","otherEvent","subevents","more","jumps","_isInFirstContentOfListItem","subcontent","_container","eventIndex","startPosition","startPositions","tokenizer","childEvents","gaps","current","adjust","breaks","_gfmTasklistFirstContentOfListItem","contentEnd","continuationConstruct","contentContinue","prefixed","tail","sliceSerialize","initial","flowInitial","afterConstruct","resolver","resolveAll","createResolver","initializeFactory","text","field","notText","atBreak","resolveAllLineSuffixes","extraResolver","chunks","bufferIndex","tabs","chunk","_index","_bufferIndex","createTokenizer","initialize","columnStart","resolveAllConstructs","accountForPotentialSkip","fields","constructFactory","construct","info","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","main","state","view","startIndex","startBufferIndex","endIndex","endBufferIndex","sliceChunks","chunkIndex","go","_","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","create","resolveTo","thematicBreak","marker","sequence","initialSize","kind","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","notBlank","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","open","after","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","destinationEnclosedBefore","destinationRaw","destinationEnclosed","destinationEnclosedEscape","destinationRawEscape","factoryLabel","markerType","label","labelEscape","factoryTitle","atFirstTitleBreak","atTitleBreak","title","titleEscape","factoryWhitespace","normalizeIdentifier","definition","identifier","labelAfter","titleConstruct","defined","codeIndented","afterStartPrefix","afterPrefix","indentedContent","headingAtx","fenceOpenInside","headingBreak","setextUnderline","paragraph","closingSequence","closingSequenceEnd","heading","htmlBlockNames","htmlRawNames","htmlFlow","startTag","declarationStart","tagCloseStart","continuationDeclarationInside","tagName","commentOpenInside","cdataOpenInside","basicSelfClosing","completeAttributeNameBefore","completeClosingTagAfter","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCharacterDataInside","continuationAtLineEnding","nextBlankConstruct","htmlContinueStart","htmlLineEnd","continuationRawEndTag","codeFenced","closingFenceConstruct","closingSequenceStart","sizeOpen","nonLazyLine","initialPrefix","sequenceOpen","infoOpen","openAfter","infoAfter","meta","createElement","decodeNamedCharacterReference","characterReference","innerHTML","char","textContent","numeric","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","balanced","afterLabelEnd","resourceConstruct","fullReferenceConstruct","collapsedReferenceConstruct","close","media","group","insideSpan","destinationAfter","between","afterLabel","labelStartImage","classifyCharacter","attention","attentionMarkers","_open","_close","openingSequence","nextEvents","movePoint","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","declarationOpen","instruction","tagOpen","commentOpen","cdataOpen","commentStart","commentStartDash","commentClose","atLineEnding","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","labelStartLink","hardBreakEscape","codeText","gap","tailExitIndex","headEnterIndex","resolveText","search","decodeNumericCharacterReference","characterEscapeOrReference","decodeString","decode","$0","$1","$2","head","hex","fromMarkdown","config","configure","transforms","canContainEols","opener","link","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","html","htmlFlowData","htmlTextData","image","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","resource","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","mdastExtensions","tokenStack","listStack","resume","setData","getData","prepareList","handler","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","and","errorHandler","onExitError","lang","depth","parent","referenceType","ancestor","fragment","ordered","spread","checked","compiler","postprocess","defaultConstructs","atCarriageReturn","endPosition","lastIndex","preprocess","combined","convert","castFactory","typeFactory","anyFactory","propsFactory","tests","checks","visitParents","visitor","reverse","is","step","factory","parents","visit","subresult","grandparents","toResult","pointStart","pointEnd","clean","unknown","augment","handlers","passThrough","returnNode","unknownHandler","nodes","normalizeUri","skip","encodeURIComponent","loose","footnoteReference","counter","id","safeId","footnoteOrder","footnoteCounts","reuseCounter","clobberPrefix","dataFootnoteRef","ariaDescribedBy","revert","subtype","suffix","contents","listItemLoose","trimLine","codePointAt","blockquote","break","className","delete","footnote","footnoteById","no","dangerous","imageReference","inlineCode","linkReference","listLoose","wrapped","disabled","child","properties","root","table","rows","align","row","out","cellIndex","cell","last","trimLines","toml","ignore","yaml","footnoteDefinition","allowDangerousHtml","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","footnoteBackLabel","definitions","hName","hProperties","hChildren","ctx","toHast","foot","listItems","referenceIndex","backReferences","backReference","dataFootnoteBackref","ariaLabel","tailTail","dataFootnotes","footer","bridge","mutate","Schema","normal","space","merge","Info","attribute","boolean","booleanish","overloadedBoolean","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","powers","increment","types","DefinedInfo","mask","mark","transform","attributes","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","capture","charSet","cite","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","decoding","defer","dir","dirName","download","draggable","encType","enterKeyHint","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inputMode","integrity","isMap","itemId","itemProp","itemRef","itemScope","itemType","language","loading","loop","low","manifest","maxLength","method","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforePrint","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","ping","placeholder","playsInline","poster","preload","readOnly","referrerPolicy","rel","reversed","rowSpan","sandbox","scope","scoped","seamless","selected","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","tabIndex","translate","typeMustMatch","useMap","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","charOff","classId","clear","codeBase","codeType","color","compact","declare","face","frame","frameBorder","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","profile","prompt","rev","rightMargin","scheme","scrolling","standby","summary","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","results","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","typeOf","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filter","filterRes","filterUnits","focusable","focusHighlight","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","opacity","operator","orient","orientation","overflow","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","r","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x1","x2","xChannelSelector","y1","y2","yChannelSelector","zoomAndPan","htmlBase","svgBase","rehypeFilter","allowedElements","disallowedElements","allowElement","parent_","unwrapDisallowed","protocols","thing","valid","dash","cap","kebab","camelcase","hastToReact","tableElements","Set","childrenToReact","childIndex","toReact","skipHtml","parentSchema","schema","addProperty","listDepth","component","components","basic","React","ReactIs","linkTarget","transformLinkUri","inline","level","transformImageUri","getInputElement","getElementsBeforeCount","textAlign","isHeader","sourcePos","rawSourcePos","sourcePosition","includeElementIndex","siblingCount","Type","dashes","find","padRight","padLeft","commas","v","styleReplacer","parseStyle","deprecated","renderers","astPlugins","escapeHtml","allowNode","allowedTypes","disallowedTypes","includeNodeIndex","ReactMarkdown","deprecation","remarkParse","remarkPlugins","remarkRehype","remarkRehypeOptions","rehypePlugins","hastNode","defaultProps","uri","first","colon","propTypes"],"sourceRoot":""}